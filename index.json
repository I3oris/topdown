{"repository_name":"topdown","body":"# TopDown\n\nTopDown is a [crystal](https://crystal-lang.org) shard for writing a simple or evolved parser.\n\nTopDown is at an early development stage.\n\nIt aims to keep itself simple and efficient thanks to [Top down operator precedence and Pratt Parsing](https://en.wikipedia.org/wiki/Operator-precedence_parser) in which it's inspired.\n\nTopDown supports both token and tokenless parsing, each having their pros and cons, but each can fit better whether the use case.\n\nOperator precedence can be handled rather naturally and doesn't involve complex machinery under the hood, simply recursive descent under top down parsing theory.\n\n<!-- This lead TopDown to be very fast. (benchmark are not yet ready) -->\n\nTopDown is designed to be extensible. Writing parsing rules is made in code directly, allowing to insert custom behaviour in each step of parsing, storing state for a state-based parser, or make more complex parsing operation.\n\nFinally, TopDown is lightweight and doesn't require any dependencies.\n\n## Overview\n\nWrite a simple parser:\n```crystal\nrequire \"topdown\"\n\nclass MyParser < TopDown::Parser\n  root :expression\n\n  syntax :expression do\n    parse!(/\\d+/).to_i\n  end\nend\n\nsource = \"1\"\nputs MyParser.new(source).parse # => 1\n```\n\nAdd basic operators with precedence:\n```crystal\nclass MyParser < TopDown::Parser\n  ...\n\n  syntax :expression do\n    union do\n      parse(/\\d+/).to_i\n      infix(30, :pow)\n      infix(20, :mul)\n      infix(20, :div)\n      infix(10, :add)\n      infix(10, :sub)\n    end\n  end\n\n  syntax :pow, \"**\" { left() ** parse!(:expression) }\n  syntax :mul, '*' { left() * parse!(:expression) }\n  syntax :div, '/' { left() / parse!(:expression) }\n  syntax :add, '+' { left() + parse!(:expression) }\n  syntax :sub, '-' { left() - parse!(:expression) }\nend\n\nsource = \"3*6+6*4\"\nputs MyParser.new(source).parse # => 42\n```\n\nSkip whitespaces and comments:\n```crystal\nclass MyParser < TopDown::Parser\n  ...\n\n  skip do\n    parse(' ' | '\\n' | '\\t')\n    parse(\"//\") { repeat { parse(not('\\n')) } }\n    parse(\"/*\") do\n      repeat { parse(not(\"*/\")) }\n      parse!(\"*/\")\n    end\n  end\nend\n\nsource = \"3*6  + /* comment */ 6*4 // comment\"\nputs MyParser.new(source).parse # => 42\n```\n\nAdd more prefix syntax:\n```crystal\nclass MyParser < TopDown::Parser\n  ...\n\n  syntax :expression do\n    union do\n      parse(:parenthesis)\n      parse(:positif, with_precedence: 40)\n      parse(:negatif, with_precedence: 40)\n      parse(/\\d+/).to_i\n      infix(30, :pow)\n      infix(20, :mul)\n      infix(20, :div)\n      infix(10, :add)\n      infix(10, :sub)\n    end\n  end\n\n  syntax :parenthesis, '(' do\n    exp = parse!(:expression)\n    parse!(')', error: \"Parenthesis '(' is not closed\", at: begin_location())\n    exp\n  end\n\n  syntax :positif, '+' { +parse!(:expression) }\n  syntax :negatif, '-' { -parse!(:expression) }\nend\n\nsource = \"(-9 - 42 / (2*+5)**2) / -3\"\nputs MyParser.new(source).parse # => 3.14\n```\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     topdown:\n       github: I3oris/topdown\n   ```\n\n2. Run `shards install`\n\n## Documentation\n\nRead the [API documentation](https://i3oris.github.io/topdown/).\n\n## Benchmark\n\n```\n# === Small JSON ===\n#            Crystal JSON 147.76k (  6.77µs) (±17.12%)  2.77kB/op        fastest\n#            TopDown JSON  48.91k ( 20.45µs) (± 5.74%)  5.84kB/op   3.02× slower\n# TopDown JSON with token  28.58k ( 34.98µs) (± 5.65%)  7.96kB/op   5.17× slower\n# === Big JSON ===\n#            Crystal JSON 877.55  (  1.14ms) (±15.84%)   228kB/op        fastest\n#            TopDown JSON 281.64  (  3.55ms) (± 8.67%)  0.97MB/op   3.12× slower\n# TopDown JSON with token 255.37  (  3.92ms) (±26.02%)  1.14MB/op   3.44× slower\n```\n\n> See the [benchmark code](./benchmark/benchmark.cr).\n\n## Roadmap\n\n- [ ] Write docs (almost complete)\n- [ ] Write spec (almost complete)\n- [x] Write readme\n- [ ] Write examples (in progress)\n- [x] Write benchmarks\n- [ ] Improve error handling\n- [ ] Improve tokens\n- [x] Improve characters parsing\n- [ ] Improve unions\n\n## Contributing\n\n1. Fork it (<https://github.com/your-github-user/topdown/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [I3oris](https://github.com/your-github-user) - creator and maintainer\n","program":{"html_id":"topdown/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"topdown","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"topdown/TopDown","path":"TopDown.html","kind":"module","full_name":"TopDown","name":"TopDown","abstract":false,"locations":[{"filename":"src/ast.cr","line_number":3,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/ast.cr#L3"},{"filename":"src/location.cr","line_number":8,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/location.cr#L8"},{"filename":"src/topdown.cr","line_number":6,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/topdown.cr#L6"}],"repository_name":"topdown","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.2.0\""}],"types":[{"html_id":"topdown/TopDown/AST","path":"TopDown/AST.html","kind":"class","full_name":"TopDown::AST","name":"AST","abstract":true,"superclass":{"html_id":"topdown/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"topdown/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"topdown/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ast.cr","line_number":5,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/ast.cr#L5"}],"repository_name":"topdown","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"topdown/TopDown","kind":"module","full_name":"TopDown","name":"TopDown"},"doc":"TODO docs","summary":"<p><span class=\"flag orange\">TODO</span>  docs</p>","instance_methods":[{"html_id":"at(location:Location,end_location:Location=location)-instance-method","name":"at","doc":"TODO docs","summary":"<p><span class=\"flag orange\">TODO</span>  docs</p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":"Location"},{"name":"end_location","default_value":"location","external_name":"end_location","restriction":"Location"}],"args_string":"(location : Location, end_location : Location = location)","args_html":"(location : <a href=\"../TopDown/Location.html\">Location</a>, end_location : <a href=\"../TopDown/Location.html\">Location</a> = location)","location":{"filename":"src/ast.cr","line_number":12,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/ast.cr#L12"},"def":{"name":"at","args":[{"name":"location","external_name":"location","restriction":"Location"},{"name":"end_location","default_value":"location","external_name":"end_location","restriction":"Location"}],"visibility":"Public","body":"@location = location\n@end_location = end_location\nself\n"}},{"html_id":"at(location:Range(Location,Location))-instance-method","name":"at","doc":"TODO docs","summary":"<p><span class=\"flag orange\">TODO</span>  docs</p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":"Range(Location, Location)"}],"args_string":"(location : Range(Location, Location))","args_html":"(location : Range(<a href=\"../TopDown/Location.html\">Location</a>, <a href=\"../TopDown/Location.html\">Location</a>))","location":{"filename":"src/ast.cr","line_number":17,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/ast.cr#L17"},"def":{"name":"at","args":[{"name":"location","external_name":"location","restriction":"Range(Location, Location)"}],"visibility":"Public","body":"@location, @end_location = location.begin, location.end\nself\n"}},{"html_id":"each_child(&)-instance-method","name":"each_child","doc":"TODO docs\nOverride this method to indicate the children of this AST node","summary":"<p><span class=\"flag orange\">TODO</span>  docs Override this method to indicate the children of this AST node</p>","abstract":false,"location":{"filename":"src/ast.cr","line_number":24,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/ast.cr#L24"},"def":{"name":"each_child","yields":0,"block_arity":0,"visibility":"Public","body":"{% for ivar in @type.instance_vars %}\n        if TopDown.ast_child?(@{{ ivar }})\n          if ({{ ivar }} = @{{ ivar }}).is_a? Enumerable\n            {{ ivar }}.each { |child| yield child }\n          else\n            yield @{{ ivar }}\n          end\n        end\n      {% end %}"}},{"html_id":"end_location:TopDown::Location-instance-method","name":"end_location","doc":"TODO docs","summary":"<p><span class=\"flag orange\">TODO</span>  docs</p>","abstract":false,"location":{"filename":"src/ast.cr","line_number":9,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/ast.cr#L9"},"def":{"name":"end_location","visibility":"Public","body":"@end_location"}},{"html_id":"location:TopDown::Location-instance-method","name":"location","doc":"TODO docs","summary":"<p><span class=\"flag orange\">TODO</span>  docs</p>","abstract":false,"location":{"filename":"src/ast.cr","line_number":7,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/ast.cr#L7"},"def":{"name":"location","visibility":"Public","body":"@location"}},{"html_id":"to_s(io,indent=0)-instance-method","name":"to_s","doc":"TODO docs","summary":"<p><span class=\"flag orange\">TODO</span>  docs</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""},{"name":"indent","default_value":"0","external_name":"indent","restriction":""}],"args_string":"(io, indent = 0)","args_html":"(io, indent = <span class=\"n\">0</span>)","location":{"filename":"src/ast.cr","line_number":37,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/ast.cr#L37"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":""},{"name":"indent","default_value":"0","external_name":"indent","restriction":""}],"visibility":"Public","body":"self.to_s_without_children(io)\neach_child do |child|\n  io << '\\n'\n  (indent + 1).times do\n    io << \"  \"\n  end\n  if child.is_a?(AST)\n    child.to_s(io, indent + 1)\n  else\n    child.inspect(io)\n  end\nend\n"}},{"html_id":"to_s_without_children(io)-instance-method","name":"to_s_without_children","doc":"TODO docs","summary":"<p><span class=\"flag orange\">TODO</span>  docs</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/ast.cr","line_number":52,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/ast.cr#L52"},"def":{"name":"to_s_without_children","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"{% if true %}\n        io << {{ (@type.name(generic_args: false).split(\"::\"))[-1] }}\n\n        values = [] of String\n        {% for ivar in @type.instance_vars %}\n          {% if ivar.type <= Location %}{% else %}\n            unless TopDown.ast_child?(@{{ ivar }})\n              values << \"{{ ivar.name }}: #{ @{{ ivar }}.inspect }\"\n            end\n          {% end %}\n        {% end %}\n\n        unless values.empty?\n          io << '('\n          values.join(io, \", \")\n          io << ')'\n        end\n      {% end %}"}}],"macros":[{"html_id":"def_ast(class_name,*properties)-macro","name":"def_ast","doc":"TODO docs","summary":"<p><span class=\"flag orange\">TODO</span>  docs</p>","abstract":false,"args":[{"name":"class_name","external_name":"class_name","restriction":""},{"name":"properties","external_name":"properties","restriction":""}],"args_string":"(class_name, *properties)","args_html":"(class_name, *properties)","location":{"filename":"src/ast.cr","line_number":74,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/ast.cr#L74"},"def":{"name":"def_ast","args":[{"name":"class_name","external_name":"class_name","restriction":""},{"name":"properties","external_name":"properties","restriction":""}],"splat_index":1,"visibility":"Public","body":"      class \n{{ class_name }}\n < \n{{ @type }}\n\n        getter \n{{ properties.splat }}\n\n\n        def initialize(\n{{ properties.map do |p|\n  \"@#{p.id}\".id\nend.splat }}\n)\n        \nend\n\n        \n{{ yield }}\n\n      \nend\n    \n"}}]},{"html_id":"topdown/TopDown/CharReader","path":"TopDown/CharReader.html","kind":"class","full_name":"TopDown::CharReader","name":"CharReader","abstract":false,"superclass":{"html_id":"topdown/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"topdown/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"topdown/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/char_reader.cr","line_number":8,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/char_reader.cr#L8"}],"repository_name":"topdown","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"topdown/TopDown/Parser","kind":"class","full_name":"TopDown::Parser","name":"Parser"}],"namespace":{"html_id":"topdown/TopDown","kind":"module","full_name":"TopDown","name":"TopDown"},"doc":"Base class of a `Parser`.\n\nIt composed from a `source` and can read or peek characters\ntaking in account a complete `Location`\non the source.","summary":"<p>Base class of a <code><a href=\"../TopDown/Parser.html\">Parser</a></code>.</p>","constructors":[{"html_id":"new(source:String)-class-method","name":"new","doc":"Creates a new `CharReader` (or `Parser`), initialized to read the *source*.","summary":"<p>Creates a new <code><a href=\"../TopDown/CharReader.html\">CharReader</a></code> (or <code><a href=\"../TopDown/Parser.html\">Parser</a></code>), initialized to read the <em>source</em>.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"String"}],"args_string":"(source : String)","args_html":"(source : String)","location":{"filename":"src/char_reader.cr","line_number":14,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/char_reader.cr#L14"},"def":{"name":"new","args":[{"name":"source","external_name":"source","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(source)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"each_char(&:Char->)-instance-method","name":"each_char","doc":"Iterates over each *source* character.\n\n`location` is incremented between each character.","summary":"<p>Iterates over each <em>source</em> character.</p>","abstract":false,"location":{"filename":"src/char_reader.cr","line_number":53,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/char_reader.cr#L53"},"def":{"name":"each_char","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(Char ->)"},"visibility":"Public","body":"while !((ch = self.next_char) == '\\0')\n  yield ch\nend"}},{"html_id":"location:Location-instance-method","name":"location","doc":"Returns the current cursor location.\n\nThe location can be used later to raise an error at that point.\n```\nloc = self.location\nparse('(')\nexp = parse!(:expression)\nparse!(')', error: \"Unterminated parenthesis expression\", at: loc)\nexp\n```","summary":"<p>Returns the current cursor location.</p>","abstract":false,"location":{"filename":"src/char_reader.cr","line_number":88,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/char_reader.cr#L88"},"def":{"name":"location","return_type":"Location","visibility":"Public","body":"Location.new(@char_reader.pos, @line_number, @line_pos, 0)"}},{"html_id":"location=(location:Location)-instance-method","name":"location=","doc":"Move the cursor to the new *location*.\n\nThe *location* should be well formed, otherwise error display won't be right.\nIt is recommended to always use a location got by `self.location`.\n\nThis methods is used to backtrack the parser.\nHowever, prefer using `Parser.union`, `Parser.maybe`, and `Parser.repeat` over manual backtracks.","summary":"<p>Move the cursor to the new <em>location</em>.</p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":"Location"}],"args_string":"(location : Location)","args_html":"(location : <a href=\"../TopDown/Location.html\">Location</a>)","location":{"filename":"src/char_reader.cr","line_number":99,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/char_reader.cr#L99"},"def":{"name":"location=","args":[{"name":"location","external_name":"location","restriction":"Location"}],"visibility":"Public","body":"if @char_reader.pos == location.pos\nelse\n  @char_reader.pos = location.pos\nend\n@line_number = location.line_number\n@line_pos = location.line_pos\n"}},{"html_id":"next_assci_char?:Char|Nil-instance-method","name":"next_assci_char?","abstract":false,"location":{"filename":"src/char_reader.cr","line_number":46,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/char_reader.cr#L46"},"def":{"name":"next_assci_char?","return_type":"Char | ::Nil","visibility":"Public","body":"self.source.to_slice[@char_reader.pos]?.try(&.chr)"}},{"html_id":"next_char:Char-instance-method","name":"next_char","doc":"Returns the next character to parse, and increments the cursor `location`.","summary":"<p>Returns the next character to parse, and increments the cursor <code><a href=\"../TopDown/CharReader.html#location%3ALocation-instance-method\">#location</a></code>.</p>","abstract":false,"location":{"filename":"src/char_reader.cr","line_number":35,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/char_reader.cr#L35"},"def":{"name":"next_char","return_type":"Char","visibility":"Public","body":"char = peek_char\nif char == '\\0'\nelse\n  @char_reader.next_char\nend\nincrement_location(char)\nchar\n"}},{"html_id":"peek_char-instance-method","name":"peek_char","doc":"Returns the next character to parse, without incrementing the cursor `location`.\n\nThis method is currently the only way to look ahead during the parsing.\nIt allow for instance:\n```\nparse(\"if\") do\n  break Fail.new if peek_char.alphanumeric?\n  Token.new(:if)\nend\n# as an equivalent to:\nparse(/if\\b/) { Token.new(:if) }\n```","summary":"<p>Returns the next character to parse, without incrementing the cursor <code><a href=\"../TopDown/CharReader.html#location%3ALocation-instance-method\">#location</a></code>.</p>","abstract":false,"location":{"filename":"src/char_reader.cr","line_number":30,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/char_reader.cr#L30"},"def":{"name":"peek_char","visibility":"Public","body":"@char_reader.current_char"}},{"html_id":"previous_assci_char?:Char|Nil-instance-method","name":"previous_assci_char?","abstract":false,"location":{"filename":"src/char_reader.cr","line_number":42,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/char_reader.cr#L42"},"def":{"name":"previous_assci_char?","return_type":"Char | ::Nil","visibility":"Public","body":"self.source.to_slice[@char_reader.pos - 2]?.try(&.chr)"}},{"html_id":"source:String-instance-method","name":"source","abstract":false,"location":{"filename":"src/char_reader.cr","line_number":59,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/char_reader.cr#L59"},"def":{"name":"source","return_type":"String","visibility":"Public","body":"@char_reader.string"}},{"html_id":"source=(source:String)-instance-method","name":"source=","doc":"Modifies the *source* and reset the cursor `location` to zero.","summary":"<p>Modifies the <em>source</em> and reset the cursor <code><a href=\"../TopDown/CharReader.html#location%3ALocation-instance-method\">#location</a></code> to zero.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"String"}],"args_string":"(source : String)","args_html":"(source : String)","location":{"filename":"src/char_reader.cr","line_number":64,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/char_reader.cr#L64"},"def":{"name":"source=","args":[{"name":"source","external_name":"source","restriction":"String"}],"visibility":"Public","body":"@char_reader = Char::Reader.new(source)\nself.location = Location.new(0, 0, 0, 0)\n"}}]},{"html_id":"topdown/TopDown/Location","path":"TopDown/Location.html","kind":"struct","full_name":"TopDown::Location","name":"Location","abstract":false,"superclass":{"html_id":"topdown/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"topdown/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"topdown/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"topdown/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"topdown/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/location.cr","line_number":8,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/location.cr#L8"}],"repository_name":"topdown","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"topdown/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"namespace":{"html_id":"topdown/TopDown","kind":"module","full_name":"TopDown","name":"TopDown"},"doc":"Represents a location into a parser source.\n\n`pos` is the position on string (in number of bytes).\n\n`line_number` start by 0.\n\n`line_pos` is the position on line (in number of characters).","summary":"<p>Represents a location into a parser source.</p>","constructors":[{"html_id":"new(pos:Int32,line_number:Int32,line_pos:Int32,token_pos:Int32)-class-method","name":"new","abstract":false,"args":[{"name":"pos","external_name":"pos","restriction":"Int32"},{"name":"line_number","external_name":"line_number","restriction":"Int32"},{"name":"line_pos","external_name":"line_pos","restriction":"Int32"},{"name":"token_pos","external_name":"token_pos","restriction":"Int32"}],"args_string":"(pos : Int32, line_number : Int32, line_pos : Int32, token_pos : Int32)","args_html":"(pos : Int32, line_number : Int32, line_pos : Int32, token_pos : Int32)","location":{"filename":"src/location.cr","line_number":8,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/location.cr#L8"},"def":{"name":"new","args":[{"name":"pos","external_name":"pos","restriction":"Int32"},{"name":"line_number","external_name":"line_number","restriction":"Int32"},{"name":"line_pos","external_name":"line_pos","restriction":"Int32"},{"name":"token_pos","external_name":"token_pos","restriction":"Int32"}],"visibility":"Public","body":"_ = allocate\n_.initialize(pos, line_number, line_pos, token_pos)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"-(other:Location)-instance-method","name":"-","doc":"Gives the relative location between two others.\n\nNOTE: `line_pos` may be negative even `self` > `other`.\n\n```\nl1 = TopDown::Location.new(5, line_number: 0, line_pos: 5)\nl2 = TopDown::Location.new(17, line_number: 0, line_pos: 17)\nl3 = TopDown::Location.new(32, line_number: 1, line_pos: 13)\n\nl2 - l1 # => TopDown::Location(@pos=12, @line_number=0, @line_pos=12)\nl3 - l2 # => TopDown::Location(@pos=15, @line_number=1, @line_pos=-4)\n```","summary":"<p>Gives the relative location between two others.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Location"}],"args_string":"(other : Location)","args_html":"(other : <a href=\"../TopDown/Location.html\">Location</a>)","location":{"filename":"src/location.cr","line_number":98,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/location.cr#L98"},"def":{"name":"-","args":[{"name":"other","external_name":"other","restriction":"Location"}],"visibility":"Public","body":"Location.new(@pos - other.pos, @line_number - other.line_number, @line_pos - other.line_pos, @token_pos - other.token_pos)"}},{"html_id":"<=>(other:Location)-instance-method","name":"<=>","doc":"Compares two locations by their `pos` only.\n\nReturns `self.pos <=> other.pos`.","summary":"<p>Compares two locations by their <code><a href=\"../TopDown/Location.html#pos%3AInt32-instance-method\">#pos</a></code> only.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Location"}],"args_string":"(other : Location)","args_html":"(other : <a href=\"../TopDown/Location.html\">Location</a>)","location":{"filename":"src/location.cr","line_number":106,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/location.cr#L106"},"def":{"name":"<=>","args":[{"name":"other","external_name":"other","restriction":"Location"}],"visibility":"Public","body":"@pos <=> other.pos"}},{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/location.cr","line_number":8,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/location.cr#L8"},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@pos.clone, @line_number.clone, @line_pos.clone, @token_pos.clone)"}},{"html_id":"copy_with(pos_pos=@pos,line_number_line_number=@line_number,line_pos_line_pos=@line_pos,token_pos_token_pos=@token_pos)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_pos","default_value":"@pos","external_name":"pos","restriction":""},{"name":"_line_number","default_value":"@line_number","external_name":"line_number","restriction":""},{"name":"_line_pos","default_value":"@line_pos","external_name":"line_pos","restriction":""},{"name":"_token_pos","default_value":"@token_pos","external_name":"token_pos","restriction":""}],"args_string":"(pos _pos = @pos, line_number _line_number = @line_number, line_pos _line_pos = @line_pos, token_pos _token_pos = @token_pos)","args_html":"(pos _pos = @pos, line_number _line_number = @line_number, line_pos _line_pos = @line_pos, token_pos _token_pos = @token_pos)","location":{"filename":"src/location.cr","line_number":8,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/location.cr#L8"},"def":{"name":"copy_with","args":[{"name":"_pos","default_value":"@pos","external_name":"pos","restriction":""},{"name":"_line_number","default_value":"@line_number","external_name":"line_number","restriction":""},{"name":"_line_pos","default_value":"@line_pos","external_name":"line_pos","restriction":""},{"name":"_token_pos","default_value":"@token_pos","external_name":"token_pos","restriction":""}],"visibility":"Public","body":"self.class.new(_pos, _line_number, _line_pos, _token_pos)"}},{"html_id":"line_number:Int32-instance-method","name":"line_number","abstract":false,"def":{"name":"line_number","return_type":"Int32","visibility":"Public","body":"@line_number"}},{"html_id":"line_pos:Int32-instance-method","name":"line_pos","abstract":false,"def":{"name":"line_pos","return_type":"Int32","visibility":"Public","body":"@line_pos"}},{"html_id":"pos:Int32-instance-method","name":"pos","abstract":false,"def":{"name":"pos","return_type":"Int32","visibility":"Public","body":"@pos"}},{"html_id":"show_in_source(io:IO,source:String,radius:Int32=2,end_location:Location=self)-instance-method","name":"show_in_source","doc":"Displays this location in *source*.\n\n* *io* : the output io.\n* *source* : the source string.\n* *radius* : how many lines above and below to show.\n* *end_location* : if set other than `self`, the function show the range location between `self` and *end_location*.\n\n```\nl1 = TopDown::Location.new(5, line_number: 0, line_pos: 5)\nl2 = TopDown::Location.new(17, line_number: 0, line_pos: 17)\nsource = <<-SOURCE\n  puts \"Hello World\"\n  puts \"Hello 💎\"\n  puts \"Hello ♥\"\n  SOURCE\n\nl1.show_in_source(STDOUT, source)\n#   0 | puts \"Hello World\"\n#            ^\n#   1 | puts \"Hello 💎\"\n#   2 | puts \"Hello ♥\"\\n\n\nl1.show_in_source(STDOUT, source, end_location: l2)\n#   0 | puts \"Hello World\"\n#            ^~~~~~~~~~~~\n#   1 | puts \"Hello 💎\"\n#   2 | puts \"Hello ♥\"\\n\n```","summary":"<p>Displays this location in <em>source</em>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"source","external_name":"source","restriction":"String"},{"name":"radius","default_value":"2","external_name":"radius","restriction":"Int32"},{"name":"end_location","default_value":"self","external_name":"end_location","restriction":"Location"}],"args_string":"(io : IO, source : String, radius : Int32 = 2, end_location : Location = self)","args_html":"(io : IO, source : String, radius : Int32 = <span class=\"n\">2</span>, end_location : <a href=\"../TopDown/Location.html\">Location</a> = <span class=\"k\">self</span>)","location":{"filename":"src/location.cr","line_number":42,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/location.cr#L42"},"def":{"name":"show_in_source","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"source","external_name":"source","restriction":"String"},{"name":"radius","default_value":"2","external_name":"radius","restriction":"Int32"},{"name":"end_location","default_value":"self","external_name":"end_location","restriction":"Location"}],"visibility":"Public","body":"diff_location = end_location - self\ncursor_size = diff_location.pos\ncursor_n = 0\neach_lines_in_radius(source, radius) do |line, i|\n  ((io << (line_prelude(i))) << line) << '\\n'\n  if @line_number <= i && i <= end_location.line_number\n    offset = (i == @line_number) ? @line_pos : 0\n    ((line_prelude(i)).size + offset).times do\n      io << ' '\n    end\n    0.upto((line.size - 1) - offset) do\n      io << (cursor_char(cursor_n))\n      cursor_n = cursor_n + 1\n      if cursor_n >= cursor_size\n        break\n      end\n    end\n    if offset == line.size\n      io << (cursor_char(cursor_n))\n    end\n    cursor_n = cursor_n + 1\n    io << '\\n'\n  end\nend\n"}},{"html_id":"token_pos:Int32-instance-method","name":"token_pos","abstract":false,"def":{"name":"token_pos","return_type":"Int32","visibility":"Public","body":"@token_pos"}}]},{"html_id":"topdown/TopDown/Parser","path":"TopDown/Parser.html","kind":"class","full_name":"TopDown::Parser","name":"Parser","abstract":true,"superclass":{"html_id":"topdown/TopDown/CharReader","kind":"class","full_name":"TopDown::CharReader","name":"CharReader"},"ancestors":[{"html_id":"topdown/TopDown/CharReader","kind":"class","full_name":"TopDown::CharReader","name":"CharReader"},{"html_id":"topdown/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"topdown/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ast.cr","line_number":96,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/ast.cr#L96"},{"filename":"src/hooks.cr","line_number":1,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/hooks.cr#L1"},{"filename":"src/parser/parselets.cr","line_number":1,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parselets.cr#L1"},{"filename":"src/parser/parser.cr","line_number":200,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L200"},{"filename":"src/parser/syntax_error.cr","line_number":1,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L1"},{"filename":"src/parser/tokens.cr","line_number":1,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/tokens.cr#L1"}],"repository_name":"topdown","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"topdown/TopDown","kind":"module","full_name":"TopDown","name":"TopDown"},"doc":"`TopDown::Parser` is the main class to derive for building a parser.\n\n### Basis\n\nA minimal parser could be:\n```\nclass Parser < TopDown::Parser\n  root :expression\n\n  syntax :expression do\n  end\nend\n```\nwhich will parse anything but EOF.\n\n`root` indicate the starting point of parsing, the rest is to do inside `syntax`.\n\nSyntax are like functions, in which, any code can be added.\nInside it, `parse` & `parse!` can be used to define what to parse.\n\n```\nsyntax :expression do\n  a = parse('a')\n  parse(/( )+/)\n  foo = parse!(\"foo\")\n\n  {a, foo}\nend\n```\n\n```\n\"a   foo\" # ~> {'a', \"foo\"}\n\"a   bar\" # ~> Unexpected character 'b', expected 'foo'\n\"ab\"      # ~> Unexpected character 'b', expected expression\n```\nNOTE:\nIn this documentation, `\"foo\" # ~> result` is used as a shortcut for\n`Parser.new(\"foo\").parse # => result`\n\n\nIn the above, if `parse!(\"foo\")` fail to parse, it raises an error.\nBut `parse('a')` don't raises, instead it use a `break` (`break Fail.new`) to stop the current sequence to be parsed.\nThis failure is caught by the `root :expression`, that why it next raises an exception.\n\nThis difference is important because is on what is based `TopDown`, using `parse` let a change to the surrounding context to handle the failure, whereas\n`parse!` permit the raise directly, leading to better errors.\n\nFor example, using `parse!` above:\n```\nsyntax :expression do\n  a = parse!('a')\n  parse!(/( )+/)\n  foo = parse!(\"foo\")\n\n  {a, foo}\nend\n```\n\n```\n\"ab\" # ~> Unexpected character 'b', expected pattern /( )+/\n```\nGives a more precise error.\n\n### Repeat, union, maybe\n\n`repeat`, `union`, `maybe` allow interesting things to be parsed. They take both a block, in which parse failure can occur.\n\n```\nsyntax :expression do\n  repeat do\n    parse('a')\n    parse!('b')\n  end\n  maybe { parse('c') }\n  parse!('d')\n\n  union do\n    parse('e')\n    parse('é')\n    parse('è')\n  end\n  \"ok\"\nend\n```\n\nThis is equivalent to parse `/(ab)*c?d[eéè]/`, in a bit more verbose. However, doing so allow to insert code between and retrieve\nonly needed result, storing in array, or to insert some logic.\n\nFor example:\n```\nsyntax :expression do\n  array = [] of {Char, Char}\n  repeat do\n    array << {parse('a'), parse!('b')}\n  end\n  have_c = maybe { parse('c') }\n  parse!('d')\n\n  if have_c\n    e = union do\n      parse('e')\n      parse('é')\n      parse('è')\n    end\n  end\n  {array, e}\nend\n```\nHere, we store each `ab` in an array and accept the union `'e'|'é'|'è'` only if the optional `'c'` have been parsed.\n```\n\"ababd\" # ~> {[{'a', 'b'}, {'a', 'b'}], nil}\n\"cde\"   # ~> {[], 'e'}\n\"dé\"    # ~> Unexpected character 'é', expected 'EOF'\n\"abac\"  # # Unexpected character 'c', expected 'b'\n```\n\nNOTE:\nWhen using `repeat`, `union`, and `maybe`, we always use `parse` at first (without exclamation), because they `break` on failure,\nwhich is caught by the `repeat`/`maybe`/`union`. They know so they should continue parsing without a failure.\n\n### Infix\n\n`infix` can be used inside a union. It permits to parse operators with precedence easily.\n```\nsyntax :expression do\n  union do\n    parse(/\\d+/).to_i\n    infix 30 \"**\" { left() ** parse!(:expression) }\n    infix 20 '*' { left() * parse!(:expression) }\n    infix 20 '/' { left() / parse!(:expression) }\n    infix 10 '+' { left() + parse!(:expression) }\n    infix 10 '-' { left() - parse!(:expression) }\n  end\nend\n```\n\nInfix are treated specially by the `union`. They are parsed after any other member of the union, the `left()` result is updated each time.\nThey are parsed in function of their precedence (first argument), higher precedence mean grouped first.\n\n```\n\"3*6+6*4\" # ~> 42\n```\n\n### Precedence:\n\n`current_precedence()` is initially zero, it changes when entering in `infix`. This is this value that guide the recursion for parsing operators.\nIts value can be changed at specific places, so parsing order can be entirely controlled.\n\nFor example, assuming we want to parse a ternary if `_ ? _ : _` that have a higher precedence that classical operators (e.g. `\"1+1?2:3+3\"` gets parsed as (`1` + (`1?2:3`)) + `3`.\n\nWe can do the following:\n```\nsyntax(:expression) do\n  union do\n    parse(/\\d+/).to_i\n    infix 10, :plus\n    infix 90, :ternary_if\n  end\nend\n\nsyntax :plus, '+' do\n  left() + parse!(:expression)\nend\n\nsyntax :ternary_if, '?' do\n  cond = left()\n  then_arm = parse!(:expression)\n  parse!(':')\n  else_arm = parse!(:expression)\n\n  cond != 0 ? then_arm : else_arm\nend\n```\n\n```\n\"1+1?2:3+3\" # ~> 6\n```\n\nHowever the following is not what we except:\n```\n\"1+1?2+2:3+3\" # => Unexpected character '+', expected ':'\n```\n\nThis happens because the `+` inside the `then_arm` have lower precedence, it wants so\nlet its left with higher precedence finish before parsing itself. So the `then_arm` finish\nbut we except a `:` right after, so it fails (got '+', expected ':').\n\nTo fix that, we can set the `current_precedence()` for the `then arm` to 0:\n```\nthen_arm = parse!(:expression, with_precedence: 0)\n```\n```\n\"1+1?2+2:3+3\" # ~> 8\n```\n","summary":"<p><code><a href=\"../TopDown/Parser.html\">TopDown::Parser</a></code> is the main class to derive for building a parser.</p>","instance_methods":[{"html_id":"each_token(&):Nil-instance-method","name":"each_token","doc":"Yields successively parsed tokens.","summary":"<p>Yields successively parsed tokens.</p>","abstract":false,"location":{"filename":"src/parser/tokens.cr","line_number":204,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/tokens.cr#L204"},"def":{"name":"each_token","yields":1,"block_arity":1,"return_type":"Nil","visibility":"Public","body":"if @tokens.empty?\n  load_tokens\nend\n@tokens.each do |token|\n  yield Box(typeof(parse_token?.not_nil!)).unbox(token)\nend\n"}},{"html_id":"hook_could_not_parse_any_token(got:Char,expected:Nil)-instance-method","name":"hook_could_not_parse_any_token","doc":"Override this method to modify the default error message when any token can be parsed.","summary":"<p>Override this method to modify the default error message when any token can be parsed.</p>","abstract":false,"args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Nil"}],"args_string":"(got : Char, expected : Nil)","args_html":"(got : Char, expected : Nil)","location":{"filename":"src/hooks.cr","line_number":18,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/hooks.cr#L18"},"def":{"name":"hook_could_not_parse_any_token","args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Nil"}],"visibility":"Public","body":"\"Unexpected character '#{dump_in_error(got)}', could not parse any token\""}},{"html_id":"hook_expected_any_character_but(got:Char,expected:Char)-instance-method","name":"hook_expected_any_character_but","doc":"Override this method to modify the default error message when `parse!(not('a'))` fail.","summary":"<p>Override this method to modify the default error message when <code>parse!(not('a'))</code> fail.</p>","abstract":false,"args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Char"}],"args_string":"(got : Char, expected : Char)","args_html":"(got : Char, expected : Char)","location":{"filename":"src/hooks.cr","line_number":42,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/hooks.cr#L42"},"def":{"name":"hook_expected_any_character_but","args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Char"}],"visibility":"Public","body":"\"Unexpected character, expected any character but '#{dump_in_error(expected)}'\""}},{"html_id":"hook_expected_any_character_but_range(got:Char,expected:Range(Char,Char))-instance-method","name":"hook_expected_any_character_but_range","doc":"Override this method to modify the default error message when `parse!(not('a'..'z'))` fail.","summary":"<p>Override this method to modify the default error message when <code>parse!(not('a'..'z'))</code> fail.</p>","abstract":false,"args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Range(Char, Char)"}],"args_string":"(got : Char, expected : Range(Char, Char))","args_html":"(got : Char, expected : Range(Char, Char))","location":{"filename":"src/hooks.cr","line_number":47,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/hooks.cr#L47"},"def":{"name":"hook_expected_any_character_but_range","args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Range(Char, Char)"}],"visibility":"Public","body":"\"Unexpected character, expected any character but range '#{dump_in_error(expected)}'\""}},{"html_id":"hook_expected_any_in_range(got:Char,expected:Range(Char,Char))-instance-method","name":"hook_expected_any_in_range","doc":"Override this method to modify the default error message when `parse!('a'..'z')` fail.","summary":"<p>Override this method to modify the default error message when <code>parse!('a'..'z')</code> fail.</p>","abstract":false,"args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Range(Char, Char)"}],"args_string":"(got : Char, expected : Range(Char, Char))","args_html":"(got : Char, expected : Range(Char, Char))","location":{"filename":"src/hooks.cr","line_number":8,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/hooks.cr#L8"},"def":{"name":"hook_expected_any_in_range","args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Range(Char, Char)"}],"visibility":"Public","body":"\"Unexpected character '#{dump_in_error(got)}', expected any in range '#{dump_in_error(expected)}'\""}},{"html_id":"hook_expected_any_token_but(got:Token|Nil,expected:String)-instance-method","name":"hook_expected_any_token_but","doc":"Override this method to modify the default error message when `parse!(not([\"TOKEN\"]))` fail.","summary":"<p>Override this method to modify the default error message when <code>parse!(not([&quot;TOKEN&quot;]))</code> fail.</p>","abstract":false,"args":[{"name":"got","external_name":"got","restriction":"Token | ::Nil"},{"name":"expected","external_name":"expected","restriction":"String"}],"args_string":"(got : Token | Nil, expected : String)","args_html":"(got : <a href=\"../TopDown/Parser/Token.html\">Token</a> | Nil, expected : String)","location":{"filename":"src/hooks.cr","line_number":52,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/hooks.cr#L52"},"def":{"name":"hook_expected_any_token_but","args":[{"name":"got","external_name":"got","restriction":"Token | ::Nil"},{"name":"expected","external_name":"expected","restriction":"String"}],"visibility":"Public","body":"\"Unexpected token, expected any token but '#{dump_in_error(expected)}'\""}},{"html_id":"hook_expected_character(got:Char,expected:Char)-instance-method","name":"hook_expected_character","doc":"Override this method to modify the default error message when `parse!('a')` fail.","summary":"<p>Override this method to modify the default error message when <code>parse!('a')</code> fail.</p>","abstract":false,"args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Char"}],"args_string":"(got : Char, expected : Char)","args_html":"(got : Char, expected : Char)","location":{"filename":"src/hooks.cr","line_number":3,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/hooks.cr#L3"},"def":{"name":"hook_expected_character","args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Char"}],"visibility":"Public","body":"\"Unexpected character '#{dump_in_error(got)}', expected character '#{dump_in_error(expected)}'\""}},{"html_id":"hook_expected_pattern(got:Char,expected:Regex)-instance-method","name":"hook_expected_pattern","doc":"Override this method to modify the default error message when `parse!(/regex/)` fail.","summary":"<p>Override this method to modify the default error message when <code>parse!(/regex/)</code> fail.</p>","abstract":false,"args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Regex"}],"args_string":"(got : Char, expected : Regex)","args_html":"(got : Char, expected : Regex)","location":{"filename":"src/hooks.cr","line_number":28,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/hooks.cr#L28"},"def":{"name":"hook_expected_pattern","args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Regex"}],"visibility":"Public","body":"\"Unexpected character '#{dump_in_error(got)}', expected pattern #{dump_in_error(expected)}\""}},{"html_id":"hook_expected_syntax(got:Char,expected:Symbol)-instance-method","name":"hook_expected_syntax","doc":"Override this method to modify the default error message when `parse!(:syntax)` fail.","summary":"<p>Override this method to modify the default error message when <code>parse!(:syntax)</code> fail.</p>","abstract":false,"args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Symbol"}],"args_string":"(got : Char, expected : Symbol)","args_html":"(got : Char, expected : Symbol)","location":{"filename":"src/hooks.cr","line_number":33,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/hooks.cr#L33"},"def":{"name":"hook_expected_syntax","args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Symbol"}],"visibility":"Public","body":"\"Unexpected character '#{dump_in_error(got)}', expected syntax #{dump_in_error(expected)}\""}},{"html_id":"hook_expected_token(got:Token|Nil,expected:String)-instance-method","name":"hook_expected_token","doc":"Override this method to modify the default error message when `parse!([\"TOKEN\"])` fail.","summary":"<p>Override this method to modify the default error message when <code>parse!([&quot;TOKEN&quot;])</code> fail.</p>","abstract":false,"args":[{"name":"got","external_name":"got","restriction":"Token | ::Nil"},{"name":"expected","external_name":"expected","restriction":"String"}],"args_string":"(got : Token | Nil, expected : String)","args_html":"(got : <a href=\"../TopDown/Parser/Token.html\">Token</a> | Nil, expected : String)","location":{"filename":"src/hooks.cr","line_number":13,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/hooks.cr#L13"},"def":{"name":"hook_expected_token","args":[{"name":"got","external_name":"got","restriction":"Token | ::Nil"},{"name":"expected","external_name":"expected","restriction":"String"}],"visibility":"Public","body":"\"Unexpected token '#{dump_in_error(got)}', expected token '#{dump_in_error(expected)}'\""}},{"html_id":"hook_expected_word(got:Char,expected:String)-instance-method","name":"hook_expected_word","doc":"Override this method to modify the default error message when `parse!(\"string\")` fail.","summary":"<p>Override this method to modify the default error message when <code>parse!(&quot;string&quot;)</code> fail.</p>","abstract":false,"args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"String"}],"args_string":"(got : Char, expected : String)","args_html":"(got : Char, expected : String)","location":{"filename":"src/hooks.cr","line_number":23,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/hooks.cr#L23"},"def":{"name":"hook_expected_word","args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"String"}],"visibility":"Public","body":"\"Unexpected character '#{dump_in_error(got)}', expected word '#{dump_in_error(expected)}'\""}},{"html_id":"hook_union_failed(got:Char,expected:Nil)-instance-method","name":"hook_union_failed","abstract":false,"args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Nil"}],"args_string":"(got : Char, expected : Nil)","args_html":"(got : Char, expected : Nil)","location":{"filename":"src/hooks.cr","line_number":37,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/hooks.cr#L37"},"def":{"name":"hook_union_failed","args":[{"name":"got","external_name":"got","restriction":"Char"},{"name":"expected","external_name":"expected","restriction":"Nil"}],"visibility":"Public","body":"\"Unexpected character '#{dump_in_error(got)}'\""}},{"html_id":"location:Location-instance-method","name":"location","doc":"Returns the current cursor location.\n\nThe location can be used later to raise an error at that point.\n```\nloc = self.location\nparse('(')\nexp = parse!(:expression)\nparse!(')', error: \"Unterminated parenthesis expression\", at: loc)\nexp\n```","summary":"<p>Returns the current cursor location.</p>","abstract":false,"location":{"filename":"src/parser/tokens.cr","line_number":31,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/tokens.cr#L31"},"def":{"name":"location","return_type":"Location","visibility":"Public","body":"Location.new(@char_reader.pos, @line_number, @line_pos, @token_pos)"}},{"html_id":"location=(location:Location)-instance-method","name":"location=","doc":"Move the cursor to the new *location*.\n\nThe *location* should be well formed, otherwise error display won't be right.\nIt is recommended to always use a location got by `self.location`.\n\nThis methods is used to backtrack the parser.\nHowever, prefer using `Parser.union`, `Parser.maybe`, and `Parser.repeat` over manual backtracks.","summary":"<p>Move the cursor to the new <em>location</em>.</p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":"Location"}],"args_string":"(location : Location)","args_html":"(location : <a href=\"../TopDown/Location.html\">Location</a>)","location":{"filename":"src/parser/tokens.cr","line_number":36,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/tokens.cr#L36"},"def":{"name":"location=","args":[{"name":"location","external_name":"location","restriction":"Location"}],"visibility":"Public","body":"super(location)\n@token_pos = location.token_pos\n"}},{"html_id":"parse-instance-method","name":"parse","doc":"Parses the source contained in this parser.\n\nReturns the result of the root syntax.\nExpects `eof` after parsing root syntax.\nRaises `SyntaxError` if fail to parse.","summary":"<p>Parses the source contained in this parser.</p>","abstract":false,"location":{"filename":"src/parser/parser.cr","line_number":206,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L206"},"def":{"name":"parse","visibility":"Public","body":"load_tokens\nresult = parse_root\nif result.is_a?(Fail)\n  raise_syntax_error(error_message(->hook_expected_syntax(Char, Symbol), got: peek_char, expected: :root))\nend\nskip_chars!\nparse!('\\0')\nresult\n"}},{"html_id":"raise_syntax_error(message:String,atlocation:Location=self.location,source:String=self.source)-instance-method","name":"raise_syntax_error","doc":"Raises a `SyntaxError` at current `location` and current `source`.\n\n*location* could be a range between two `Location`. A endless range mean a location up to `self.location`.","summary":"<p>Raises a <code><a href=\"../TopDown/Parser/SyntaxError.html\">SyntaxError</a></code> at current <code><a href=\"../TopDown/Parser.html#location%3ALocation-instance-method\">#location</a></code> and current <code>source</code>.</p>","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"},{"name":"location","default_value":"self.location","external_name":"at","restriction":"Location"},{"name":"source","default_value":"self.source","external_name":"source","restriction":"String"}],"args_string":"(message : String, at location : Location = self.location, source : String = self.source)","args_html":"(message : String, at location : <a href=\"../TopDown/Location.html\">Location</a> = <span class=\"k\">self</span>.location, source : String = <span class=\"k\">self</span>.source)","location":{"filename":"src/parser/syntax_error.cr","line_number":45,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L45"},"def":{"name":"raise_syntax_error","args":[{"name":"message","external_name":"message","restriction":"String"},{"name":"location","default_value":"self.location","external_name":"at","restriction":"Location"},{"name":"source","default_value":"self.source","external_name":"source","restriction":"String"}],"visibility":"Public","body":"raise(SyntaxError.new(message, source, location, location))"}},{"html_id":"raise_syntax_error(message:String,atlocation:Range(Location,Location),source:String=self.source)-instance-method","name":"raise_syntax_error","doc":"Raises a `SyntaxError` at current `location` and current `source`.\n\n*location* could be a range between two `Location`. A endless range mean a location up to `self.location`.","summary":"<p>Raises a <code><a href=\"../TopDown/Parser/SyntaxError.html\">SyntaxError</a></code> at current <code><a href=\"../TopDown/Parser.html#location%3ALocation-instance-method\">#location</a></code> and current <code>source</code>.</p>","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"},{"name":"location","external_name":"at","restriction":"Range(Location, Location)"},{"name":"source","default_value":"self.source","external_name":"source","restriction":"String"}],"args_string":"(message : String, at location : Range(Location, Location), source : String = self.source)","args_html":"(message : String, at location : Range(<a href=\"../TopDown/Location.html\">Location</a>, <a href=\"../TopDown/Location.html\">Location</a>), source : String = <span class=\"k\">self</span>.source)","location":{"filename":"src/parser/syntax_error.cr","line_number":50,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L50"},"def":{"name":"raise_syntax_error","args":[{"name":"message","external_name":"message","restriction":"String"},{"name":"location","external_name":"at","restriction":"Range(Location, Location)"},{"name":"source","default_value":"self.source","external_name":"source","restriction":"String"}],"visibility":"Public","body":"raise(SyntaxError.new(message, source, location.begin, location.end))"}},{"html_id":"raise_syntax_error(message:String,atlocation:Range(Location,Nil),source:String=self.source)-instance-method","name":"raise_syntax_error","doc":"Raises a `SyntaxError` at current `location` and current `source`.\n\n*location* could be a range between two `Location`. A endless range mean a location up to `self.location`.","summary":"<p>Raises a <code><a href=\"../TopDown/Parser/SyntaxError.html\">SyntaxError</a></code> at current <code><a href=\"../TopDown/Parser.html#location%3ALocation-instance-method\">#location</a></code> and current <code>source</code>.</p>","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"},{"name":"location","external_name":"at","restriction":"Range(Location, Nil)"},{"name":"source","default_value":"self.source","external_name":"source","restriction":"String"}],"args_string":"(message : String, at location : Range(Location, Nil), source : String = self.source)","args_html":"(message : String, at location : Range(<a href=\"../TopDown/Location.html\">Location</a>, Nil), source : String = <span class=\"k\">self</span>.source)","location":{"filename":"src/parser/syntax_error.cr","line_number":55,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L55"},"def":{"name":"raise_syntax_error","args":[{"name":"message","external_name":"message","restriction":"String"},{"name":"location","external_name":"at","restriction":"Range(Location, Nil)"},{"name":"source","default_value":"self.source","external_name":"source","restriction":"String"}],"visibility":"Public","body":"raise(SyntaxError.new(message, source, location.begin, self.location))"}},{"html_id":"source=(source:String)-instance-method","name":"source=","doc":"Modifies the *source* and reset the cursor `location` to zero.","summary":"<p>Modifies the <em>source</em> and reset the cursor <code><a href=\"../TopDown/Parser.html#location%3ALocation-instance-method\">#location</a></code> to zero.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"String"}],"args_string":"(source : String)","args_html":"(source : String)","location":{"filename":"src/parser/tokens.cr","line_number":24,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/tokens.cr#L24"},"def":{"name":"source=","args":[{"name":"source","external_name":"source","restriction":"String"}],"visibility":"Public","body":"super(source)\n@tokens.clear\n@token_pos = 0\n"}},{"html_id":"tokens-instance-method","name":"tokens","doc":"Returns the array of parsed tokens.","summary":"<p>Returns the array of parsed tokens.</p>","abstract":false,"location":{"filename":"src/parser/tokens.cr","line_number":213,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/tokens.cr#L213"},"def":{"name":"tokens","visibility":"Public","body":"tokens = [] of typeof(parse_token?.not_nil!)\neach_token do |token|\n  tokens << token\nend\ntokens\n"}}],"macros":[{"html_id":"ast(ast_class,*args,at=nil,**options)-macro","name":"ast","doc":"TODO docs","summary":"<p><span class=\"flag orange\">TODO</span>  docs</p>","abstract":false,"args":[{"name":"ast_class","external_name":"ast_class","restriction":""},{"name":"args","external_name":"args","restriction":""},{"name":"at","default_value":"nil","external_name":"at","restriction":""}],"args_string":"(ast_class, *args, at = nil, **options)","args_html":"(ast_class, *args, at = <span class=\"n\">nil</span>, **options)","location":{"filename":"src/ast.cr","line_number":98,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/ast.cr#L98"},"def":{"name":"ast","args":[{"name":"ast_class","external_name":"ast_class","restriction":""},{"name":"args","external_name":"args","restriction":""},{"name":"at","default_value":"nil","external_name":"at","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":1,"visibility":"Public","body":"      \n{{ ast_class }}\n.new(\n{{ args.splat(\", \") }}\n \n{{ options.double_splat(\", \") }}\n).at(\n{{ at || \"begin_location()..self.location\".id }}\n)\n    \n"}},{"html_id":"begin_location-macro","name":"begin_location","doc":"Returns the `Location` at the beginning of the `syntax`.\n\nThe given location is after skipping characters.","summary":"<p>Returns the <code><a href=\"../TopDown/Location.html\">Location</a></code> at the beginning of the <code><a href=\"../TopDown/Parser.html#syntax%28syntax_name%2C%2Aprefixs%2Cend%21%3Dnil%2C%26block%29-macro\">syntax</a></code>.</p>","abstract":false,"location":{"filename":"src/parser/parser.cr","line_number":380,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L380"},"def":{"name":"begin_location","visibility":"Public","body":"    _begin_location_\n  "}},{"html_id":"capture(&)-macro","name":"capture","doc":"Captures all characters parsed inside the *block*.\n\nReturns a `String`\nNOTE: `skip` characters are still captured, use `partial_capture` instead.\n\n```\ncapture do\n  repeat(/ +/) do\n    parse(/\\w+/)\n  end\nend\n```\n```\n\"a   bc d e\"  # ~> \"a   bc d e\"\n\"Hello World\" # ~> \"Hello World\"\n```","summary":"<p>Captures all characters parsed inside the <em>block</em>.</p>","abstract":false,"location":{"filename":"src/parser/parser.cr","line_number":763,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L763"},"def":{"name":"capture","block_arg":{"name":"","external_name":"","restriction":""},"visibility":"Public","body":"    \n%pos\n = self.location.pos\n    \n{{ yield }}\n\n    String.new(self.source.to_slice[\n%pos\n...self.location.pos])\n  \n"}},{"html_id":"contexts(*contexts)-macro","name":"contexts","doc":"TODO docs","summary":"<p><span class=\"flag orange\">TODO</span>  docs</p>","abstract":false,"args":[{"name":"contexts","external_name":"contexts","restriction":""}],"args_string":"(*contexts)","args_html":"(*contexts)","location":{"filename":"src/parser/tokens.cr","line_number":236,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/tokens.cr#L236"},"def":{"name":"contexts","args":[{"name":"contexts","external_name":"contexts","restriction":""}],"splat_index":0,"visibility":"Public","body":"    @token_contexts = [\n{{ contexts[0] }}\n]\n\n    \n{% for ctx in contexts %}\n      def {{ ctx.id }}?\n        @token_contexts.last == {{ ctx }}\n      end\n    {% end %}\n\n\n    macro context_push(context)\n      \n\\{% if\n !(\n{{ contexts }}\n).includes?(context) %}\n        \n\\{% \nraise \"Undefined context: #{context.id}\" %}\n      \n\\{% end\n %}\n      \n# puts \"push \n\\{\n{context.id}}\"\n\n      @token_contexts.push(\n\\{\n{context}})\n      nil\n    \nend\n\n    def context_pop\n      @token_contexts.pop?\n    \nend\n  \n"}},{"html_id":"current_precedence-macro","name":"current_precedence","doc":"Returns the current precedence.\n\nInitially zero.\nChanges inside an `infix` or when `with_precedence` is used.","summary":"<p>Returns the current precedence.</p>","abstract":false,"location":{"filename":"src/parser/parser.cr","line_number":373,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L373"},"def":{"name":"current_precedence","visibility":"Public","body":"    _precedence_\n  "}},{"html_id":"end_word-macro","name":"end_word","doc":"Allows to match a word only if a non-alphanumeric follows\n\n```\nparse(\"foo\") { end_word }\n\nEquivalent to: (but faster)\nparse(/foo\\b/) { nil }\n```\n```\n\"foo bar\" # ~> \"foo\"\n\"foobar\"  # ~> Unexpected character 'b', expected 'EOF'\n```\n\nNOTE: end_word returns `nil`.","summary":"<p>Allows to match a word only if a non-alphanumeric follows</p>","abstract":false,"location":{"filename":"src/parser/parser.cr","line_number":830,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L830"},"def":{"name":"end_word","visibility":"Public","body":"    break Fail.new if peek_char.alphanumeric?\n    nil\n  "}},{"html_id":"forward_fail(result)-macro","name":"forward_fail","doc":"Returns the given *result*, or `break` the current sequence if *result* is a `Fail`.\n\nThis macro is the recommended ways to handle `Fail`.\n\n```\nresult = Array.new(3) do\n  parse(\"a\")\nend\n\ntypeof(result) # => Array(String) | TopDown::Parser::Fail\n\nresult = forward_fail(result)\ntypeof(result) # => Array(String)\n```","summary":"<p>Returns the given <em>result</em>, or <code>break</code> the current sequence if <em>result</em> is a <code><a href=\"../TopDown/Parser/Fail.html\">Fail</a></code>.</p>","abstract":false,"args":[{"name":"result","external_name":"result","restriction":""}],"args_string":"(result)","args_html":"(result)","location":{"filename":"src/parser/parser.cr","line_number":738,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L738"},"def":{"name":"forward_fail","args":[{"name":"result","external_name":"result","restriction":""}],"visibility":"Public","body":"    \n%result\n = \n{{ result }}\n\n    if \n%result\n.is_a? Fail\n      break Fail.new\n    \nelse\n      \n%result\n\n    \nend\n  \n"}},{"html_id":"infix(precedence,parselet,associativity=\"right\",&block)-macro","name":"infix","doc":"TODO: docs","summary":"<p><span class=\"flag orange\">TODO</span>  docs</p>","abstract":false,"args":[{"name":"precedence","external_name":"precedence","restriction":""},{"name":"parselet","external_name":"parselet","restriction":""},{"name":"associativity","default_value":"\"right\"","external_name":"associativity","restriction":""}],"args_string":"(precedence, parselet, associativity = \"right\", &block)","args_html":"(precedence, parselet, associativity = <span class=\"s\">&quot;right&quot;</span>, &block)","location":{"filename":"src/parser/parser.cr","line_number":316,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L316"},"def":{"name":"infix","args":[{"name":"precedence","external_name":"precedence","restriction":""},{"name":"parselet","external_name":"parselet","restriction":""},{"name":"associativity","default_value":"\"right\"","external_name":"associativity","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    if _precedence_ < \n{{ precedence }}\n\n      \n{% if associativity.id == \"right\".id\n  precedence -= 0.0001\nend %}\n\n      _begin_location_ = self.location\n      _left_ = parselet(\n{{ parselet }}\n, with_precedence: \n{{ precedence }}\n, left: _left_) \n{{ block }}\n\n    \nelse\n      break Fail.new\n    \nend\n  \n"}},{"html_id":"left-macro","name":"left","doc":"In the context of an `infix` member, returns the `left` result of the current `union`.\n\nReturns `nil` in a context other than inside an `infix`.\n\nEach time a `union` member is successfully parsed, `left` value is updated.\n\nAs a `union` continue parsing `infix` until possible,\n`left` allows to retrieve the subsequent results.\n\n```\nsyntax(:exp) do\n  union do\n    parse('a')\n    infix(1, :comma)\n  end\nend\n```\n```\nsyntax(:comma) do\n  l = left() # left returns either\n  r = parse(:exp)\n  \"#{l}, #{r}\"\nend\n```","summary":"<p>In the context of an <code><a href=\"../TopDown/Parser.html#infix%28precedence%2Cparselet%2Cassociativity%3D%22right%22%2C%26block%29-macro\">infix</a></code> member, returns the <code><a href=\"../TopDown/Parser.html#left-macro\">left</a></code> result of the current <code><a href=\"../TopDown/Parser.html#union%28%26members%29-macro\">union</a></code>.</p>","abstract":false,"location":{"filename":"src/parser/parser.cr","line_number":365,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L365"},"def":{"name":"left","visibility":"Public","body":"    _left_\n  "}},{"html_id":"maybe(parselet=nil,&)-macro","name":"maybe","doc":"Parses the sequence inside the block, returns `nil` if it fails.\n\n```\nx = parse('1').to_i\ny =\n  maybe do\n    parse('+')\n    parse!('1').to_i\n  end\nparse!(';')\nx + (y || 0)\n```\n```\n\"1;\"   # ~> 1\n\"1+1;\" # ~> 2\n\"1+*;\" # ~> \"Unexpected character '*', expected '1'\"\n\"1*;\"  # ~> \"Unexpected character '*', expected ';'\"\n```","summary":"<p>Parses the sequence inside the block, returns <code>nil</code> if it fails.</p>","abstract":false,"args":[{"name":"parselet","default_value":"nil","external_name":"parselet","restriction":""}],"args_string":"(parselet = nil, &)","args_html":"(parselet = <span class=\"n\">nil</span>, &)","location":{"filename":"src/parser/parser.cr","line_number":476,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L476"},"def":{"name":"maybe","args":[{"name":"parselet","default_value":"nil","external_name":"parselet","restriction":""}],"block_arg":{"name":"","external_name":"","restriction":""},"visibility":"Public","body":"    \n%begin_location\n = self.location\n    \n%result\n = handle_fail do\n      \n{% if parselet %}\n        parse({{ parselet }})\n      {% end %}\n\n      \n{{ yield }}\n\n    \nend\n    if \n%result\n.is_a? Fail\n      self.location = \n%begin_location\n\n      nil\n    \nelse\n      \n%result\n\n    \nend\n  \n"}},{"html_id":"maybe_union(&block)-macro","name":"maybe_union","doc":"Equivalent to `maybe { union { ... } }`","summary":"<p>Equivalent to `maybe { union { ...</p>","abstract":false,"location":{"filename":"src/parser/parser.cr","line_number":636,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L636"},"def":{"name":"maybe_union","block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    maybe do\n      _union_ do\n        \n{{ block.body }}\n\n      \nend\n    \nend\n  \n"}},{"html_id":"no_skip(&)-macro","name":"no_skip","doc":"Prevents the `skip` rules to be triggered inside the given block.","summary":"<p>Prevents the <code><a href=\"../TopDown/Parser.html#skip%28%26members%29-macro\">skip</a></code> rules to be triggered inside the given block.</p>","abstract":false,"location":{"filename":"src/parser/parser.cr","line_number":694,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L694"},"def":{"name":"no_skip","block_arg":{"name":"","external_name":"","restriction":""},"visibility":"Public","body":"    @no_skip_nest += 1\n    (\n{{ yield }}\n) \nensure @no_skip_nest -= 1\n  \n"}},{"html_id":"parse(parselet,with_precedence=nil,options=nil,&block)-macro","name":"parse","doc":"Parses the given *parselet* (`ParseletLiteral`), and yield/return the according result.\n\n#### failure:\nIf the given *parselet* fails to parse, it `break` the current sequence with a `Fail`. Failure is catch by the surrounding context.\n* inside an `union`, tell the union that member have fail. The union tries to parse the next member.\n* inside a `maybe`, the maybe will return `nil`.\n* inside a `repeat`, make the repeat to stop.\n* inside a `syntax`, the syntax is considered to fail, it will in turn `break` or raises.\n\n#### block:\nA *block* could be given to let return the value of the block.\n\n#### precedence:\n*with_precedence* (`NumberLiteral`) changes the `current_precedence`, the given *parselet* will be parsed as if the contained syntax have this precedence.\nAllow to handle multi-precedence for ternary-or-more operator.\n","summary":"<p>Parses the given <em>parselet</em> (<code><a href=\"../TopDown/Parser/ParseletLiteral.html\">ParseletLiteral</a></code>), and yield/return the according result.</p>","abstract":false,"args":[{"name":"parselet","external_name":"parselet","restriction":""},{"name":"with_precedence","default_value":"nil","external_name":"with_precedence","restriction":""},{"name":"options","default_value":"nil","external_name":"options","restriction":""}],"args_string":"(parselet, with_precedence = nil, options = nil, &block)","args_html":"(parselet, with_precedence = <span class=\"n\">nil</span>, options = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/parser/parser.cr","line_number":286,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L286"},"def":{"name":"parse","args":[{"name":"parselet","external_name":"parselet","restriction":""},{"name":"with_precedence","default_value":"nil","external_name":"with_precedence","restriction":""},{"name":"options","default_value":"nil","external_name":"options","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    parselet(\n{{ parselet }}\n, with_precedence: \n{{ with_precedence }}\n, options: \n{{ options }}\n) \n{{ block }}\n\n  \n"}},{"html_id":"parse!(parselet,error=nil,at=nil,with_precedence=nil,options=nil,&block)-macro","name":"parse!","doc":"Similar to [`Parser.parse`](#parse(parselet,with_precedence=nil,&block)-macro), but raises `SyntaxError` if the parsing fail.\n\n*error*: allows to customize error message, it can be:\n* a `StringLiteral`:\n  Following percent interpolations are available:\n  * `%{got}`: The character or token causing the failure.\n  * `%{expected}`: The expected `Char`, `String`, `Regex`, `Token` or syntax name (`Symbol`).\n* a `ProcLiteral` taking two arguments: 'got' and 'expected', with types explained above.\n\n*at*: indicates where the error is raised, it can be a `Location`, `Range(Location, Location)` or `Range(Location, Nil)`.\n\n#### failure:\nBecause it raises, this shouldn't be used as first *parselet* inside a `union`, `maybe`, `repeat` and `syntax`.\nThis would raises before the surrounding context could try an other solution.\n\nHowever, this should generally be used everywhere else, to allow more localized errors.","summary":"<p>Similar to <a href=\"#parse(parselet,with_precedence=nil,&amp;block)-macro\"><code>Parser.parse</code></a>, but raises <code><a href=\"../TopDown/Parser/SyntaxError.html\">SyntaxError</a></code> if the parsing fail.</p>","abstract":false,"args":[{"name":"parselet","external_name":"parselet","restriction":""},{"name":"error","default_value":"nil","external_name":"error","restriction":""},{"name":"at","default_value":"nil","external_name":"at","restriction":""},{"name":"with_precedence","default_value":"nil","external_name":"with_precedence","restriction":""},{"name":"options","default_value":"nil","external_name":"options","restriction":""}],"args_string":"(parselet, error = nil, at = nil, with_precedence = nil, options = nil, &block)","args_html":"(parselet, error = <span class=\"n\">nil</span>, at = <span class=\"n\">nil</span>, with_precedence = <span class=\"n\">nil</span>, options = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/parser/parser.cr","line_number":306,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L306"},"def":{"name":"parse!","args":[{"name":"parselet","external_name":"parselet","restriction":""},{"name":"error","default_value":"nil","external_name":"error","restriction":""},{"name":"at","default_value":"nil","external_name":"at","restriction":""},{"name":"with_precedence","default_value":"nil","external_name":"with_precedence","restriction":""},{"name":"options","default_value":"nil","external_name":"options","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    parselet(\n{{ parselet }}\n, true, \n{{ error }}\n, \n{{ at }}\n, \n{{ with_precedence }}\n, options: \n{{ options }}\n) \n{{ block }}\n\n  \n"}},{"html_id":"partial_capture(&block)-macro","name":"partial_capture","doc":"Captures chosen characters parsed inside the *block*.\n\nYields a `String::Builder` in which characters to capture can be added.\n\nReturns a `String`.\n\n```\npartial_capture do |io|\n  repeat(/ +/) do\n    io << parse(/\\w+/)\n  end\nend\n```\n```\n\"a   bc d e\"  # ~> \"abcde\"\n\"Hello World\" # ~> \"HelloWorld\"\n```","summary":"<p>Captures chosen characters parsed inside the <em>block</em>.</p>","abstract":false,"location":{"filename":"src/parser/parser.cr","line_number":786,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L786"},"def":{"name":"partial_capture","block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% if !block || (block.args.size != 1)\n  raise(\"partial_capture should have one block argument\")\nend %}\n\n    \n{{ block.args[0].id }}\n = String::Builder.new\n    \n{{ yield }}\n\n    \n{{ block.args[0].id }}\n.to_s\n  \n"}},{"html_id":"peek(parselet,with_precedence=nil,options=nil,&block)-macro","name":"peek","doc":"TODO: docs\nparse parselet\nif succeed, don't move the cursor and return parselet result\nelse, don't move the cursor and break a failure","summary":"<p><span class=\"flag orange\">TODO</span>  docs parse parselet if succeed, don't move the cursor and return parselet result else, don't move the cursor and break a failure</p>","abstract":false,"args":[{"name":"parselet","external_name":"parselet","restriction":""},{"name":"with_precedence","default_value":"nil","external_name":"with_precedence","restriction":""},{"name":"options","default_value":"nil","external_name":"options","restriction":""}],"args_string":"(parselet, with_precedence = nil, options = nil, &block)","args_html":"(parselet, with_precedence = <span class=\"n\">nil</span>, options = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/parser/parser.cr","line_number":330,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L330"},"def":{"name":"peek","args":[{"name":"parselet","external_name":"parselet","restriction":""},{"name":"with_precedence","default_value":"nil","external_name":"with_precedence","restriction":""},{"name":"options","default_value":"nil","external_name":"options","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    \n%location\n = self.location\n    handle_fail do\n      parselet(\n{{ parselet }}\n, with_precedence: \n{{ with_precedence }}\n, options: \n{{ options }}\n) \n{{ block }}\n\n    \nensure\n      self.location = \n%location\n\n    \nend.tap do |result|\n      break result if result.is_a? Fail\n    \nend\n  \n"}},{"html_id":"prefix(precedence,parselet,&block)-macro","name":"prefix","doc":"Equivalent to `parse(parselet, with_precedence: precedence)`","summary":"<p>Equivalent to <code>parse(parselet, with_precedence: precedence)</code></p>","abstract":false,"args":[{"name":"precedence","external_name":"precedence","restriction":""},{"name":"parselet","external_name":"parselet","restriction":""}],"args_string":"(precedence, parselet, &block)","args_html":"(precedence, parselet, &block)","location":{"filename":"src/parser/parser.cr","line_number":311,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L311"},"def":{"name":"prefix","args":[{"name":"precedence","external_name":"precedence","restriction":""},{"name":"parselet","external_name":"parselet","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    parselet(\n{{ parselet }}\n, with_precedence: \n{{ precedence }}\n) \n{{ block }}\n\n  \n"}},{"html_id":"repeat(parselet=nil,&)-macro","name":"repeat","doc":"Repeatedly parses the sequence inside the block until it fails.\n\nReturns `nil`. Results should be either collected by `capture` or stored inside a variable or array.\n```\nx = parse('1').to_i\nrepeat do\n  parse('+')\n  x += parse!('1').to_i\nend\nparse!(';')\nx\n```\n```\n\"1;\"         # ~> 1\n\"1+1+1+1+1;\" # ~> 5\n\"1+1+1+*;\"   # ~> \"Unexpected character '*', expected '1'\"\n\"1*;\"        # ~> \"Unexpected character '*', expected ';'\"\n```","summary":"<p>Repeatedly parses the sequence inside the block until it fails.</p>","abstract":false,"args":[{"name":"parselet","default_value":"nil","external_name":"parselet","restriction":""}],"args_string":"(parselet = nil, &)","args_html":"(parselet = <span class=\"n\">nil</span>, &)","location":{"filename":"src/parser/parser.cr","line_number":510,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L510"},"def":{"name":"repeat","args":[{"name":"parselet","default_value":"nil","external_name":"parselet","restriction":""}],"block_arg":{"name":"","external_name":"","restriction":""},"visibility":"Public","body":"    \n%old_location\n = self.location\n    loop do\n\n      \n%old_location\n = self.location\n      \n{% if parselet %}\n        parse({{ parselet }})\n      {% end %}\n\n      \n{{ yield }}\n\n    \nend\n    self.location = \n%old_location\n\n    nil\n  \n"}},{"html_id":"repeat(parselet=nil,*,separator,&)-macro","name":"repeat","doc":"Repeatedly parses the sequence inside the block until it fails, with a *separator* parselet between each iteration.\n\nReturns `nil`. Results should be either collected by `capture` or stored inside a variable or array.\n```\nx = 0\nparse('(')\nrepeat(',') do\n  x += parse('1').to_i\nend\nparse!(')')\nx\n```\n```\n\"()\"          # ~> 0\n\"(1,1,1,1,1)\" # ~> 5\n\"(1,1,)\"      # ~> \"Unexpected character ',', expected ')'\"\n\"(11)\"        # ~> \"Unexpected character '1', expected ')'\"\n```","summary":"<p>Repeatedly parses the sequence inside the block until it fails, with a <em>separator</em> parselet between each iteration.</p>","abstract":false,"args":[{"name":"parselet","default_value":"nil","external_name":"parselet","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"separator","external_name":"separator","restriction":""}],"args_string":"(parselet = nil, *, separator, &)","args_html":"(parselet = <span class=\"n\">nil</span>, *, separator, &)","location":{"filename":"src/parser/parser.cr","line_number":573,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L573"},"def":{"name":"repeat","args":[{"name":"parselet","default_value":"nil","external_name":"parselet","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"separator","external_name":"separator","restriction":""}],"splat_index":1,"block_arg":{"name":"","external_name":"","restriction":""},"visibility":"Public","body":"    maybe do\n      \n{% if parselet %}\n        parse({{ parselet }})\n      {% end %}\n\n      \n{{ yield }}\n\n      repeat do\n        parse(\n{{ separator }}\n)\n        \n{% if parselet %}\n          parse!({{ parselet }})\n        {% end %}\n\n        \n{{ yield }}\n\n      \nend\n    \nend\n  \n"}},{"html_id":"repeat_count(*,separator=nil)-macro","name":"repeat_count","doc":"TODO: docs","summary":"<p><span class=\"flag orange\">TODO</span>  docs</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"separator","default_value":"nil","external_name":"separator","restriction":""}],"args_string":"(*, separator = nil)","args_html":"(*, separator = <span class=\"n\">nil</span>)","location":{"filename":"src/parser/parser.cr","line_number":617,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L617"},"def":{"name":"repeat_count","args":[{"name":"","external_name":"","restriction":""},{"name":"separator","default_value":"nil","external_name":"separator","restriction":""}],"splat_index":0,"visibility":"Public","body":"    count = 0\n    repeat(\n{{ if separator\n  {separator: separator}.double_splat\nend }}\n) do\n      \n{{ yield }}\n\n      count += 1\n    \nend\n    count\n  \n"}},{"html_id":"repeat_n(count,parselet=nil,&block)-macro","name":"repeat_n","abstract":false,"args":[{"name":"count","external_name":"count","restriction":""},{"name":"parselet","default_value":"nil","external_name":"parselet","restriction":""}],"args_string":"(count, parselet = nil, &block)","args_html":"(count, parselet = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/parser/parser.cr","line_number":524,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L524"},"def":{"name":"repeat_n","args":[{"name":"count","external_name":"count","restriction":""},{"name":"parselet","default_value":"nil","external_name":"parselet","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% if (count.is_a?(RangeLiteral) && (count.begin.nil? || count.begin.is_a?(NumberLiteral))) && (count.end.nil? || count.end.is_a?(NumberLiteral)) %}\n      {{ max = count.end || (Int32::MAX - 1) }}\n      repeat_min_max({{ count.begin || 0 }}, {{ max }}, {{ parselet }}) {{ block }}\n    {% else %}{% if count.is_a?(NumberLiteral) %}\n      repeat_min_max({{ count }}, {{ count }}, {{ parselet }}) {{ block }}\n    {% else %}\n      {% raise(\"'count' should be 'RangeLiteral', or 'NumberLiteral' not #{count.class_name}: #{count}\") %}\n    {% end %}{% end %}\n\n  \n"}},{"html_id":"repeat_to_a(type,*,separator=nil,&)-macro","name":"repeat_to_a","doc":"TODO: docs","summary":"<p><span class=\"flag orange\">TODO</span>  docs</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"separator","default_value":"nil","external_name":"separator","restriction":""}],"args_string":"(type, *, separator = nil, &)","args_html":"(type, *, separator = <span class=\"n\">nil</span>, &)","location":{"filename":"src/parser/parser.cr","line_number":600,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L600"},"def":{"name":"repeat_to_a","args":[{"name":"type","external_name":"type","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"separator","default_value":"nil","external_name":"separator","restriction":""}],"splat_index":1,"block_arg":{"name":"","external_name":"","restriction":""},"visibility":"Public","body":"    array = \n{{ type }}\n.new\n    repeat(\n{{ if separator\n  {separator: separator}.double_splat\nend }}\n) do\n      array << \n{{ yield }}\n\n    \nend\n    array\n  \n"}},{"html_id":"repeat_to_h(type,*,separator=nil,&)-macro","name":"repeat_to_h","doc":"TODO: docs","summary":"<p><span class=\"flag orange\">TODO</span>  docs</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"separator","default_value":"nil","external_name":"separator","restriction":""}],"args_string":"(type, *, separator = nil, &)","args_html":"(type, *, separator = <span class=\"n\">nil</span>, &)","location":{"filename":"src/parser/parser.cr","line_number":590,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L590"},"def":{"name":"repeat_to_h","args":[{"name":"type","external_name":"type","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"separator","default_value":"nil","external_name":"separator","restriction":""}],"splat_index":1,"block_arg":{"name":"","external_name":"","restriction":""},"visibility":"Public","body":"    hash = \n{{ type }}\n.new\n    repeat(\n{{ if separator\n  {separator: separator}.double_splat\nend }}\n) do\n      key, value = \n{{ yield }}\n\n      hash[key] = value\n    \nend\n    hash\n  \n"}},{"html_id":"repeat_to_s(*,separator=nil,&block)-macro","name":"repeat_to_s","doc":"TODO: docs","summary":"<p><span class=\"flag orange\">TODO</span>  docs</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"separator","default_value":"nil","external_name":"separator","restriction":""}],"args_string":"(*, separator = nil, &block)","args_html":"(*, separator = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/parser/parser.cr","line_number":609,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L609"},"def":{"name":"repeat_to_s","args":[{"name":"","external_name":"","restriction":""},{"name":"separator","default_value":"nil","external_name":"separator","restriction":""}],"splat_index":0,"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    skip_chars\n    capture do\n      repeat(\n{{ if separator\n  {separator: separator}.double_splat\nend }}\n) \n{{ block }}\n\n    \nend\n  \n"}},{"html_id":"repeat_union(&block)-macro","name":"repeat_union","doc":"Equivalent to `repeat { union { ... } }`","summary":"<p>Equivalent to `repeat { union { ...</p>","abstract":false,"location":{"filename":"src/parser/parser.cr","line_number":627,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L627"},"def":{"name":"repeat_union","block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    repeat do\n      _union_ do\n        \n{{ block.body }}\n\n      \nend\n    \nend\n  \n"}},{"html_id":"root(parselet)-macro","name":"root","doc":"Defines the main syntax to parse.\n\n*parselet* (`ParseletLiteral`): the syntax name or parselet to be the root.","summary":"<p>Defines the main syntax to parse.</p>","abstract":false,"args":[{"name":"parselet","external_name":"parselet","restriction":""}],"args_string":"(parselet)","args_html":"(parselet)","location":{"filename":"src/parser/parser.cr","line_number":225,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L225"},"def":{"name":"root","args":[{"name":"parselet","external_name":"parselet","restriction":""}],"visibility":"Public","body":"    private def parse_root\n      parse!(\n{{ parselet }}\n, with_precedence: 0)\n    \nend\n  \n"}},{"html_id":"sequence(&)-macro","name":"sequence","doc":"Allows to group a sequence of parsing (inside a union for example).\n\n```\nunion do\n  sequence do\n    parse(\"a\")\n    parse!(\"b\")\n  end\n  parse(\"2\")\n```","summary":"<p>Allows to group a sequence of parsing (inside a union for example).</p>","abstract":false,"location":{"filename":"src/parser/parser.cr","line_number":803,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L803"},"def":{"name":"sequence","block_arg":{"name":"","external_name":"","restriction":""},"visibility":"Public","body":"    \n%begin_location\n = self.location\n    \n%result\n = handle_fail do\n      \n{{ yield }}\n\n    \nend\n    if \n%result\n.is_a? Fail\n      self.location = \n%begin_location\n\n      break Fail.new\n    \nelse\n      \n%result\n\n    \nend\n  \n"}},{"html_id":"skip(&members)-macro","name":"skip","doc":"Defines what is ignored during the parsing.\n\nIt is triggered every time prior a parselet is parsed.\n\nIt works similarly to the members of a `Parser.union`, in which each members are consumed while possible.\n\n```\nclass Parser < TopDown::Parser\n  skip do\n    # Skips spaces:\n    parse ' '\n    parse '\\n'\n    parse '\\t'\n    parse '\\r'\n\n    # Line comments:\n    parse \"//\" { repeat { parse not('\\n') } }\n\n    # Block comments:\n    parse \"/*\" do\n      repeat { parse not(\"*/\") }\n      parse \"*/\"\n    end\n  end\nend\n```","summary":"<p>Defines what is ignored during the parsing.</p>","abstract":false,"location":{"filename":"src/parser/parser.cr","line_number":677,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L677"},"def":{"name":"skip","block_arg":{"name":"members","external_name":"members","restriction":""},"visibility":"Public","body":"    private def skip_chars!\n      if @no_skip_nest == 0\n        no_skip do\n          loop do\n            _union_ do\n              \n{{ yield }}\n\n            \nend\n          \nend\n        \nend\n      \nend\n    \nend\n  \n"}},{"html_id":"syntax(syntax_name,*prefixs,end!=nil,&block)-macro","name":"syntax","doc":"Defines a syntax that can be called with `parse(SymbolLiteral)`.\n\n_syntax_name_ (`SymbolLiteral`): The identifier of the syntax.\n\n_*prefix_ (`ParseletLiteral`): A list of parselet, to parse at the beginning of the syntax, results are yielded in the given block.\n\n_block_: The body of the syntax, work like a usual body function.\n\n```\nclass Parser < TopDown::Parser\n  syntax :expression do\n    a = parse('a')\n    parse(/( )+/)\n    foo = parse!(\"foo\")\n\n    {a, foo}\n  end\nend\n```","summary":"<p>Defines a syntax that can be called with <code>parse(SymbolLiteral)</code>.</p>","abstract":false,"args":[{"name":"syntax_name","external_name":"syntax_name","restriction":""},{"name":"prefixs","external_name":"prefixs","restriction":""},{"name":"end!","default_value":"nil","external_name":"end!","restriction":""}],"args_string":"(syntax_name, *prefixs, end! = nil, &block)","args_html":"(syntax_name, *prefixs, end! = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/parser/parser.cr","line_number":250,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L250"},"def":{"name":"syntax","args":[{"name":"syntax_name","external_name":"syntax_name","restriction":""},{"name":"prefixs","external_name":"prefixs","restriction":""},{"name":"end!","default_value":"nil","external_name":"end!","restriction":""}],"splat_index":1,"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    @[AlwaysInline]\n    private def parse_\n{{ syntax_name.id }}\n(_left_, _precedence_, **options)\n      _begin_location_ = self.location\n\n      handle_fail do\n        prefixs = Tuple.new(\n{% for p in prefixs %} parse({{ p }}), {% end %}\n)\n\n        \n{% if block %}\n          handle_fail(*prefixs) {{ block }}\n        {% else %}{% if prefixs.size == 1 %}\n          prefixs.first\n        {% end %}{% end %}\n\n        \n{% if end! %}\n          .tap { parse!({{ end! }}) }\n        {% end %}\n\n      \nend\n    \nend\n  \n"}},{"html_id":"token(token_name,parselet=nil,context=nil,&block)-macro","name":"token","doc":"Defines a token to parse. Can be used only inside [`Parser.tokens`](#tokens(&block)-macro).\n\nEach token have a *token_name* (`StringLiteral`), and is parsed according to *parselet*.\nThe *block* indicate the value of the resulting `Token`.\n\n* If no *parselet* provided, it deduced from *token_name*.\n* If no *block* provided, token *value* is nil. (use `&.itself` to actually keep the parsed string)\n\nExample:\n\n```\nclass Parser < TopDown::Parser\n  tokens do\n    token(\"+\")                            # Parses '+', produces Token[+]\n    token(\"hey\")                          # Parses \"hey\", produces Token[hey]\n    token(\"new_line\", '\\n')               # Parses '\\n', produces Token[new_line]\n    token(\"int\", /\\d+/) { |v| v.to_i }    # Parses /\\d+/, produces Token[int:<int_value>]\n    token(\"string\", :tk_string, &.itself) # Parses syntax :tk_string, produces Token[string:<string_value>]\n  end\nend\n```","summary":"<p>Defines a token to parse.</p>","abstract":false,"args":[{"name":"token_name","external_name":"token_name","restriction":""},{"name":"parselet","default_value":"nil","external_name":"parselet","restriction":""},{"name":"context","default_value":"nil","external_name":"context","restriction":""}],"args_string":"(token_name, parselet = nil, context = nil, &block)","args_html":"(token_name, parselet = <span class=\"n\">nil</span>, context = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/parser/tokens.cr","line_number":153,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/tokens.cr#L153"},"def":{"name":"token","args":[{"name":"token_name","external_name":"token_name","restriction":""},{"name":"parselet","default_value":"nil","external_name":"parselet","restriction":""},{"name":"context","default_value":"nil","external_name":"context","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% if context %}\n      break Fail.new unless {{ context }}\n    {% end %}\n\n\n    \n{% parselet ||= token_name %}\n\n    \n{% block ||= \"{ nil }\".id %}\n\n    \n%result\n = parse(\n{{ parselet }}\n) \n{{ block }}\n\n    break Fail.new if \n%result\n.is_a? Fail\n\n    @token_pos += 1\n    create_token(\n{{ token_name.id.symbolize }}\n, \n%result\n)\n  \n"}},{"html_id":"tokens(&block)-macro","name":"tokens","doc":"This macro allows to define how tokens are parsed.\n\nEach line of the *block* correspond a token.\n\n```\nclass Parser < TopDown::Parser\n  tokens do\n    token(\"+\")\n    token(\"-\")\n    token(\"**\")\n    token(\"*\")\n    token(\"/\")\n    token(\"new_line\", '\\n')\n  end\nend\n```\n\nUse `Parser.token` to define how a token is parsed\n\nThe order of token matter, because there are parsed in this order.\nHence, if `*` is moved before `**`, the result will be two token `*` parsed instead of one `**`.\n\n\nIn addition, characters are never skipped while parsing tokens (and all inner syntax calls), see `no_skip`.","summary":"<p>This macro allows to define how tokens are parsed.</p>","abstract":false,"location":{"filename":"src/parser/tokens.cr","line_number":90,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/tokens.cr#L90"},"def":{"name":"tokens","block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    private def parse_token?\n      token = handle_fail do\n        _union_ do\n          \n{{ yield }}\n\n          parse('\\0') \n{ nil }\n        \nend\n      \nend\n      if token.is_a? Fail\n        raise_syntax_error \nerror_message(->hook_could_not_parse_any_token(Char, Nil), got: peek_char, \nexpected: nil)\n      \nend\n\n      token\n    \nend\n\n    \n{% macro_tokens_map = {} of MacroId => StringLiteral %}\n\n    \n{% for node in block.body.expressions %}\n      {% if ((call = node) && call.is_a?(Call)) && (call.name.starts_with?(\"token\"))\n  macro_tokens_map[call.args[0]] = \"typeof(#{call})\".id\nelse\n  raise(\"Only the macro call 'token(token_name, parselet = nil, &block)' is accepted inside the macro 'Parser.tokens'\")\nend %}\n    {% end %}\n\n\n    private MACRO_TOKENS_MAP = \n{{ macro_tokens_map }}\n\n\n    private def load_tokens\n      begin_location = self.location\n\n      skip_chars!\n      while token = parse_token?\n        @tokens << Box.box token\n        skip_chars!\n      \nend\n\n      self.location = begin_location\n    \nend\n\n    private def skip_chars\n    \nend\n  \n"}},{"html_id":"union(&members)-macro","name":"union","doc":"Tries to parse each member of the union, returns the result of the first that succeed.\n\n```\nunion do\n  parse('1')\n  parse('2')\n  sequence do\n    parse('a')\n    parse('b')\n    parse!('c')\n  end\n  parse('a')\nend\n```\n```\n\"1\"   # ~> '1'\n\"abc\" # ~> 'c'\n\"ab*\" # ~> \"Unexpected character '*', expected 'c'\"\n\"a\"   # ~> 'a'\n\"*\"   # ~> \"Could not parse syntax ':main'\n```\n\n#### members:\nMembers are delimited by each expression in the `Expressions` of the given block.\nNOTE: a block `begin`/`end` doesn't group a member since it is inlined by the crystal parser. Use `sequence` instead.\n\n#### failure:\nIf all members of the union fail, the union is considered to fail, and will `break` the current sequence\n\n#### infix:\n`infix` members could be added to a union.\n\n`infix` members are always treated after each normal members, in the order there are defined.\nA union act as follow:\n1) Tries to parse each normal member.\n2) When one succeed, store the result. `left` allows to retrieve this result.\n3) Tries to parse `infix` members whose precedence is greater than current precedence (initial is zero).\n4) Inner of `infix` is executed, it potentially triggers parsing of this union recursively, but current precedence is sets to the `infix` precedence.\n5) When one fully succeed, store the result. `left` is updated.\n6) Repeats step 3-5) until there no more infix.\n7) Returns last result.\n\nThis is mainly the top-down operator precedence algorithm, also known as precedence climbing.","summary":"<p>Tries to parse each member of the union, returns the result of the first that succeed.</p>","abstract":false,"location":{"filename":"src/parser/parser.cr","line_number":449,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L449"},"def":{"name":"union","block_arg":{"name":"members","external_name":"members","restriction":""},"visibility":"Public","body":"    _union_ \n{{ members }}\n\n  \n"}},{"html_id":"union!(error=nil,at=nil,&members)-macro","name":"union!","doc":"Similar to `Parser.union`, but raises `SyntaxError` if the parsing fail.","summary":"<p>Similar to <code><a href=\"../TopDown/Parser.html#union%28%26members%29-macro\">Parser.union</a></code>, but raises <code><a href=\"../TopDown/Parser/SyntaxError.html\">SyntaxError</a></code> if the parsing fail.</p>","abstract":false,"args":[{"name":"error","default_value":"nil","external_name":"error","restriction":""},{"name":"at","default_value":"nil","external_name":"at","restriction":""}],"args_string":"(error = nil, at = nil, &members)","args_html":"(error = <span class=\"n\">nil</span>, at = <span class=\"n\">nil</span>, &members)","location":{"filename":"src/parser/parser.cr","line_number":454,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L454"},"def":{"name":"union!","args":[{"name":"error","default_value":"nil","external_name":"error","restriction":""},{"name":"at","default_value":"nil","external_name":"at","restriction":""}],"block_arg":{"name":"members","external_name":"members","restriction":""},"visibility":"Public","body":"    _union_(true, \n{{ error }}\n, \n{{ at }}\n) \n{{ members }}\n\n  \n"}}],"types":[{"html_id":"topdown/TopDown/Parser/Fail","path":"TopDown/Parser/Fail.html","kind":"struct","full_name":"TopDown::Parser::Fail","name":"Fail","abstract":false,"superclass":{"html_id":"topdown/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"topdown/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"topdown/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"topdown/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/parser/parser.cr","line_number":717,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L717"}],"repository_name":"topdown","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"topdown/TopDown/Parser","kind":"class","full_name":"TopDown::Parser","name":"Parser"},"doc":"Empty struct representing a parse failure.\n\nWhen [`Parser.parse`](#parse(parselet,with_precedence=nil,&block)-macro) is used,\nif it fails, it `break` the current sequence with a `Fail`.\n\nHowever when the method is surrounded by a block, the `Fail` get returned.\nIn this case it recommended to use `Parser.forward_fail` to `break` again.\n\n```\nresult = Array.new(3) do\n  parse(\"a\")\nend\n\ntypeof(result) # => Array(String) | TopDown::Parser::Fail\n\nresult = forward_fail(result)\ntypeof(result) # => Array(String)\n```","summary":"<p>Empty struct representing a parse failure.</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/parser/parser.cr","line_number":717,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L717"},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src/parser/parser.cr","line_number":717,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parser.cr#L717"},"def":{"name":"initialize","visibility":"Public","body":""}}]},{"html_id":"topdown/TopDown/Parser/ParseletLiteral","path":"TopDown/Parser/ParseletLiteral.html","kind":"class","full_name":"TopDown::Parser::ParseletLiteral","name":"ParseletLiteral","abstract":false,"superclass":{"html_id":"topdown/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"topdown/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"topdown/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/parser/parselets.cr","line_number":39,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/parselets.cr#L39"}],"repository_name":"topdown","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"topdown/TopDown/Parser","kind":"class","full_name":"TopDown::Parser","name":"Parser"},"doc":"This type is used for documentation purpose only. It represents an element to parse inside macro.\n\nCould be one of the following:\n* a `CharLiteral`, to parse exactly one `Char`\n* a `StringLiteral`, to parse an exact `String`\n* a `RegexLiteral`, to parse the given pattern, returns the matched `String`. ($~, $0, $1, ... could be used after)\n* a `RangeLiteral(Char, Char)`, to parse any `Char` between the range\n* a `SymbolLiteral`, to parse an entire syntax, returns the result of the syntax, see `Parser.syntax`\n* an one-value `ArrayLiteral`, to parse a token, returns the value of matched token\n* a `Call`:\n  * `|`: to parse a union, see `Parser.union`.\n  * `any`, to parse any `Char` except EOF.\n  * `[any]`, to parse any token except EOF.\n  * `not(parselet)`, to parse any char, except if *parselet* matches.\n ```\nparse('💎')\nparse(\"foo\")\nparse(/\\d+/, &.to_i)\nparse(/\"(([^\"\\\\]|\\\\.)*)\"/) { $1 }\nparse(:expression)\nparse([\"+=\"])\n\nparse(\"foo\" | :value | '💎')\n# equivalent to:\nunion do\n  parse(\"foo\")\n  parse(:value)\n  parse('💎')\nend\n\nparse(any)        # any char except '\\0'\nparse([any])      # any token except EOF\nparse(not('\\n'))  # any char except '\\n' & EOF\nparse(not([\"+\"])) # any token except \"+\" & EOF\nparse(not(\"foo\")) # any char or fail on \"foo\".\n ```\nSee [`Parser.parse`](#parse(parselet,with_precedence=nil,&block)-macro).","summary":"<p>This type is used for documentation purpose only.</p>"},{"html_id":"topdown/TopDown/Parser/SyntaxError","path":"TopDown/Parser/SyntaxError.html","kind":"class","full_name":"TopDown::Parser::SyntaxError","name":"SyntaxError","abstract":false,"superclass":{"html_id":"topdown/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"topdown/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"topdown/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"topdown/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/parser/syntax_error.cr","line_number":7,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L7"}],"repository_name":"topdown","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"topdown/TopDown/Parser","kind":"class","full_name":"TopDown::Parser","name":"Parser"},"doc":"Exception raised by the parser during `Parser#parse` and all instantiation of `Parser.parse!`.\n\nContains `source` and `location` information, which are displayed when the error is dump.\n\nUse `Parser#raise_syntax_error` to raise a `SyntaxError` directly at parser location.","summary":"<p>Exception raised by the parser during <code><a href=\"../../TopDown/Parser.html#parse-instance-method\">Parser#parse</a></code> and all instantiation of <code><a href=\"../../TopDown/Parser.html#parse%21%28parselet%2Cerror%3Dnil%2Cat%3Dnil%2Cwith_precedence%3Dnil%2Coptions%3Dnil%2C%26block%29-macro\">Parser.parse!</a></code>.</p>","constructors":[{"html_id":"new(message:String,source:String,location:Location,end_location:Location=location)-class-method","name":"new","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"},{"name":"source","external_name":"source","restriction":"String"},{"name":"location","external_name":"location","restriction":"Location"},{"name":"end_location","default_value":"location","external_name":"end_location","restriction":"Location"}],"args_string":"(message : String, source : String, location : Location, end_location : Location = location)","args_html":"(message : String, source : String, location : <a href=\"../../TopDown/Location.html\">Location</a>, end_location : <a href=\"../../TopDown/Location.html\">Location</a> = location)","location":{"filename":"src/parser/syntax_error.cr","line_number":10,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L10"},"def":{"name":"new","args":[{"name":"message","external_name":"message","restriction":"String"},{"name":"source","external_name":"source","restriction":"String"},{"name":"location","external_name":"location","restriction":"Location"},{"name":"end_location","default_value":"location","external_name":"end_location","restriction":"Location"}],"visibility":"Public","body":"_ = allocate\n_.initialize(message, source, location, end_location)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"end_location:TopDown::Location-instance-method","name":"end_location","abstract":false,"location":{"filename":"src/parser/syntax_error.cr","line_number":8,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L8"},"def":{"name":"end_location","visibility":"Public","body":"@end_location"}},{"html_id":"end_location=(end_location:TopDown::Location)-instance-method","name":"end_location=","abstract":false,"args":[{"name":"end_location","external_name":"end_location","restriction":"::TopDown::Location"}],"args_string":"(end_location : TopDown::Location)","args_html":"(end_location : <a href=\"../../TopDown/Location.html\">TopDown::Location</a>)","location":{"filename":"src/parser/syntax_error.cr","line_number":8,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L8"},"def":{"name":"end_location=","args":[{"name":"end_location","external_name":"end_location","restriction":"::TopDown::Location"}],"visibility":"Public","body":"@end_location = end_location"}},{"html_id":"inspect_with_backtrace(io)-instance-method","name":"inspect_with_backtrace","doc":"Displays `message` with backtrace and shows in `source` the range `begin_location`:`location`.","summary":"<p>Displays <code><a href=\"../../TopDown/Parser/SyntaxError.html#message%3AString%3F-instance-method\">#message</a></code> with backtrace and shows in <code><a href=\"../../TopDown/Parser/SyntaxError.html#source%3AString-instance-method\">#source</a></code> the range <code>begin_location</code>:<code><a href=\"../../TopDown/Parser/SyntaxError.html#location%3ATopDown%3A%3ALocation-instance-method\">#location</a></code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/parser/syntax_error.cr","line_number":22,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L22"},"def":{"name":"inspect_with_backtrace","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"(((io << message) << \" (\") << self.class) << \")\\n\"\nio << \"At [#{@location.line_number}:#{@location.line_pos}]\\n\"\n@location.show_in_source(io, @source, end_location: @end_location)\nbacktrace?.try(&.each do |frame|\n  io.print(\"  from \")\n  io.puts(frame)\nend)\nif cause = @cause\n  io << \"Caused by: \"\n  cause.inspect_with_backtrace(io)\nend\nio.flush\n"}},{"html_id":"location:TopDown::Location-instance-method","name":"location","abstract":false,"location":{"filename":"src/parser/syntax_error.cr","line_number":8,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L8"},"def":{"name":"location","visibility":"Public","body":"@location"}},{"html_id":"location=(location:TopDown::Location)-instance-method","name":"location=","abstract":false,"args":[{"name":"location","external_name":"location","restriction":"::TopDown::Location"}],"args_string":"(location : TopDown::Location)","args_html":"(location : <a href=\"../../TopDown/Location.html\">TopDown::Location</a>)","location":{"filename":"src/parser/syntax_error.cr","line_number":8,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L8"},"def":{"name":"location=","args":[{"name":"location","external_name":"location","restriction":"::TopDown::Location"}],"visibility":"Public","body":"@location = location"}},{"html_id":"message:String?-instance-method","name":"message","abstract":false,"location":{"filename":"src/parser/syntax_error.cr","line_number":8,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L8"},"def":{"name":"message","visibility":"Public","body":"@message"}},{"html_id":"message=(message)-instance-method","name":"message=","abstract":false,"args":[{"name":"message","external_name":"message","restriction":""}],"args_string":"(message)","args_html":"(message)","location":{"filename":"src/parser/syntax_error.cr","line_number":8,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L8"},"def":{"name":"message=","args":[{"name":"message","external_name":"message","restriction":""}],"visibility":"Public","body":"@message = message"}},{"html_id":"source:String-instance-method","name":"source","abstract":false,"location":{"filename":"src/parser/syntax_error.cr","line_number":8,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L8"},"def":{"name":"source","visibility":"Public","body":"@source"}},{"html_id":"source=(source:String)-instance-method","name":"source=","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"::String"}],"args_string":"(source : String)","args_html":"(source : String)","location":{"filename":"src/parser/syntax_error.cr","line_number":8,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L8"},"def":{"name":"source=","args":[{"name":"source","external_name":"source","restriction":"::String"}],"visibility":"Public","body":"@source = source"}},{"html_id":"to_s(io)-instance-method","name":"to_s","doc":"Displays `message` and shows in `source` the range `location`:`end_location`.","summary":"<p>Displays <code><a href=\"../../TopDown/Parser/SyntaxError.html#message%3AString%3F-instance-method\">#message</a></code> and shows in <code><a href=\"../../TopDown/Parser/SyntaxError.html#source%3AString-instance-method\">#source</a></code> the range <code><a href=\"../../TopDown/Parser/SyntaxError.html#location%3ATopDown%3A%3ALocation-instance-method\">#location</a></code>:<code><a href=\"../../TopDown/Parser/SyntaxError.html#end_location%3ATopDown%3A%3ALocation-instance-method\">#end_location</a></code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/parser/syntax_error.cr","line_number":14,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/syntax_error.cr#L14"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"(io << message) << \"\\n\"\nio << \"At [#{@location.line_number}:#{@location.line_pos}]:\\n\"\n@location.show_in_source(io, @source, end_location: @end_location)\n"}}]},{"html_id":"topdown/TopDown/Parser/Token","path":"TopDown/Parser/Token.html","kind":"struct","full_name":"TopDown::Parser::Token(ValueType)","name":"Token","abstract":false,"superclass":{"html_id":"topdown/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"topdown/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"topdown/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"topdown/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/parser/tokens.cr","line_number":2,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/tokens.cr#L2"}],"repository_name":"topdown","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"topdown/TopDown/Parser","kind":"class","full_name":"TopDown::Parser","name":"Parser"},"constructors":[{"html_id":"new(name:Symbol,value:ValueType,end_location:Location)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"Symbol"},{"name":"value","external_name":"value","restriction":"ValueType"},{"name":"end_location","external_name":"end_location","restriction":"Location"}],"args_string":"(name : Symbol, value : ValueType, end_location : Location)","args_html":"(name : Symbol, value : ValueType, end_location : <a href=\"../../TopDown/Location.html\">Location</a>)","location":{"filename":"src/parser/tokens.cr","line_number":2,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/tokens.cr#L2"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"Symbol"},{"name":"value","external_name":"value","restriction":"ValueType"},{"name":"end_location","external_name":"end_location","restriction":"Location"}],"visibility":"Public","body":"_ = Token(ValueType).allocate\n_.initialize(name, value, end_location)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/parser/tokens.cr","line_number":2,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/tokens.cr#L2"},"def":{"name":"clone","visibility":"Public","body":"self.class.new(@name.clone, @value.clone, @end_location.clone)"}},{"html_id":"copy_with(name_name=@name,value_value=@value,end_location_end_location=@end_location)-instance-method","name":"copy_with","abstract":false,"args":[{"name":"_name","default_value":"@name","external_name":"name","restriction":""},{"name":"_value","default_value":"@value","external_name":"value","restriction":""},{"name":"_end_location","default_value":"@end_location","external_name":"end_location","restriction":""}],"args_string":"(name _name = @name, value _value = @value, end_location _end_location = @end_location)","args_html":"(name _name = @name, value _value = @value, end_location _end_location = @end_location)","location":{"filename":"src/parser/tokens.cr","line_number":2,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/tokens.cr#L2"},"def":{"name":"copy_with","args":[{"name":"_name","default_value":"@name","external_name":"name","restriction":""},{"name":"_value","default_value":"@value","external_name":"value","restriction":""},{"name":"_end_location","default_value":"@end_location","external_name":"end_location","restriction":""}],"visibility":"Public","body":"self.class.new(_name, _value, _end_location)"}},{"html_id":"end_location:Location-instance-method","name":"end_location","abstract":false,"def":{"name":"end_location","return_type":"Location","visibility":"Public","body":"@end_location"}},{"html_id":"inspect(io)-instance-method","name":"inspect","doc":"Same as `to_s`.","summary":"<p>Same as <code><a href=\"../../TopDown/Parser/Token.html#to_s%28io%29-instance-method\">#to_s</a></code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/parser/tokens.cr","line_number":15,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/tokens.cr#L15"},"def":{"name":"inspect","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"to_s(io)"}},{"html_id":"name:Symbol-instance-method","name":"name","abstract":false,"def":{"name":"name","return_type":"Symbol","visibility":"Public","body":"@name"}},{"html_id":"to_s(io)-instance-method","name":"to_s","doc":"Display the token.\n\n```\nToken.new(:\"+\").to_s         # => \"[+]\"\nToken.new(:name, \"foo\").to_s # => \"[name:foo]\"\n```","summary":"<p>Display the token.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/parser/tokens.cr","line_number":9,"url":"https://github.com/I3oris/topdown/blob/2468cb5969d9596a73cc6d9d6861d3ecc3b93fc5/src/parser/tokens.cr#L9"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"if @value\n  value = \":#{@value}\".dump_unquoted\nend\nio << \"[#{name.to_s.dump_unquoted}#{value}]\"\n"}},{"html_id":"value:ValueType-instance-method","name":"value","abstract":false,"def":{"name":"value","return_type":"ValueType","visibility":"Public","body":"@value"}}]}]}]}]}}